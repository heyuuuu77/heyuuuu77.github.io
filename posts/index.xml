<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on heyuuuu77</title>
    <link>https://heyuuuu77.github.io/posts/</link>
    <description>Recent content in Posts on heyuuuu77</description>
    <image>
      <title>heyuuuu77</title>
      <url>https://heyuuuu77.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://heyuuuu77.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.145.0</generator>
    <language>en</language>
    <lastBuildDate>Wed, 30 Jul 2025 20:06:04 +0800</lastBuildDate>
    <atom:link href="https://heyuuuu77.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ê≠åÂçï</title>
      <link>https://heyuuuu77.github.io/posts/music_list/</link>
      <pubDate>Wed, 15 Jan 2025 11:30:03 +0000</pubDate>
      <guid>https://heyuuuu77.github.io/posts/music_list/</guid>
      <description>Ê≠åÂçïÔºå‰π¶ÂçïËÆ∞ÂΩï</description>
    </item>
    <item>
      <title>Elasticsearch</title>
      <link>https://heyuuuu77.github.io/posts/elasticsearch/</link>
      <pubDate>Wed, 30 Jul 2025 20:06:04 +0800</pubDate>
      <guid>https://heyuuuu77.github.io/posts/elasticsearch/</guid>
      <description>&lt;h3 id=&#34;start-elasticsearch-with-docker-localhost&#34;&gt;start elasticsearch with docker localhost&lt;/h3&gt;
&lt;p&gt;ÊâßË°å&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;curl -fsSL https://elastic.co/start-local | sh 8DkwaOdk 8DkwaOdk elastic
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;curl -ssSL will get start-local.sh. The content will be:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
#!/bin/sh
# --------------------------------------------------------
# Run Elasticsearch and Kibana for local testing
# Note: do not use this script in a production environment
# --------------------------------------------------------
#
# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
# or more contributor license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright
# ownership. Elasticsearch B.V. licenses this file to you under
# the Apache License, Version 2.0 (the &amp;#34;License&amp;#34;); you may
# not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#	http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# &amp;#34;AS IS&amp;#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
set -eu

parse_args() {
  # Parse the script parameters
  while [ &amp;#34;$#&amp;#34; -gt 0 ]; do
    case &amp;#34;$1&amp;#34; in
      -v)
        # Check that there is another argument for the version
        if [ $# -lt 2 ]; then
          echo &amp;#34;Error: -v requires a version value (eg. -v 8.17.0)&amp;#34;
          exit 1
        fi
        es_version=&amp;#34;$2&amp;#34;
        shift 2
        ;;

      --esonly)
        esonly=true
        shift
        ;;

      --)
        # End of options; shift and exit the loop
        shift
        break
        ;;

      -*)
        # Unknown or unsupported option
        echo &amp;#34;Error: Unknown option &amp;#39;$1&amp;#39;&amp;#34;
        exit 1
        ;;

      *)
        # We&amp;#39;ve hit a non-option argument; stop parsing options
        break
        ;;
    esac
  done
}

startup() {
  echo
  echo &amp;#39;  ______ _           _   _      &amp;#39;
  echo &amp;#39; |  ____| |         | | (_)     &amp;#39;
  echo &amp;#39; | |__  | | __ _ ___| |_ _  ___ &amp;#39;
  echo &amp;#39; |  __| | |/ _` / __| __| |/ __|&amp;#39;
  echo &amp;#39; | |____| | (_| \__ \ |_| | (__ &amp;#39;
  echo &amp;#39; |______|_|\__,_|___/\__|_|\___|&amp;#39;
  echo &amp;#39;-------------------------------------------------&amp;#39;
  echo &amp;#39;üöÄ Run Elasticsearch and Kibana for local testing&amp;#39;
  echo &amp;#39;-------------------------------------------------&amp;#39;
  echo 
  echo &amp;#39;‚ÑπÔ∏è  Do not use this script in a production environment&amp;#39;
  echo

  # Version
  version=&amp;#34;0.10.0&amp;#34;

  # Folder name for the installation
  installation_folder=&amp;#34;${ES_LOCAL_DIR:-elastic-start-local}&amp;#34;
  # API key name for Elasticsearch
  api_key_name=&amp;#34;elastic-start-local&amp;#34;
  # Name of the error log
  error_log=&amp;#34;error-start-local.log&amp;#34;
  # Minimum version for docker-compose
  min_docker_compose=&amp;#34;1.29.0&amp;#34;
  # Elasticsearch container name
  elasticsearch_container_name=&amp;#34;es-local-dev${ES_LOCAL_DIR:+-${ES_LOCAL_DIR}}&amp;#34;
  # Kibana container name
  kibana_container_name=&amp;#34;kibana-local-dev${ES_LOCAL_DIR:+-${ES_LOCAL_DIR}}&amp;#34;
  # Kibana settings container name
  kibana_settings_container_name=&amp;#34;kibana-local-settings${ES_LOCAL_DIR:+-${ES_LOCAL_DIR}}&amp;#34;
  # Minimum disk space required for docker images + services (in GB)
  min_disk_space_required=5
}

# Check for ARM64 architecture
is_arm64() {
  arch=&amp;#34;$(uname -m)&amp;#34;
  if [ &amp;#34;$arch&amp;#34; = &amp;#34;arm64&amp;#34; ] || [ &amp;#34;$arch&amp;#34; = &amp;#34;aarch64&amp;#34; ]; then
    return 0 # Return 0 (true)
  else
    return 1 # Return 1 (false)
  fi
}

# Alternative to sort -V, which is not available in BSD-based systems (e.g., macOS)
version_sort() {
  awk -F&amp;#39;.&amp;#39; &amp;#39;
  {
      printf(&amp;#34;%d %d %d %s\n&amp;#34;, $1, $2, $3, $0)
  }&amp;#39; | sort -n -k1,1 -k2,2 -k3,3 | awk &amp;#39;{print $4}&amp;#39;
}

# Function to check if the format is a valid semantic version (major.minor.patch)
is_valid_version() {
  echo &amp;#34;$1&amp;#34; | grep -E -q &amp;#39;^[0-9]+\.[0-9]+\.[0-9]+$&amp;#39;
}

# Get the latest stable version of Elasticsearch
# Note: It removes all the beta or candidate releases from the list
# but includes the GA releases (e.g. new major)
get_latest_version() {
  versions=&amp;#34;$(curl -s &amp;#34;https://artifacts.elastic.co/releases/stack.json&amp;#34;)&amp;#34;
  latest_version=$(echo &amp;#34;$versions&amp;#34; | awk -F&amp;#39;&amp;#34;&amp;#39; &amp;#39;/&amp;#34;version&amp;#34;: *&amp;#34;/ {print $4}&amp;#39; | grep -E &amp;#39;^[0-9]+\.[0-9]+\.[0-9]+( GA)?$&amp;#39; | version_sort | tail -n 1)
  # Remove the GA prefix from the version, if present
  latest_version=$(echo &amp;#34;$latest_version&amp;#34; | awk &amp;#39;{ gsub(/ GA$/, &amp;#34;&amp;#34;, $0); print }&amp;#39;)

  # Check if the latest version is empty
  if [ -z &amp;#34;$latest_version&amp;#34; ]; then
    echo &amp;#34;Error: the latest Elasticsearch version is empty&amp;#34;
    exit 1
  fi
  # Check if the latest version is valid
  if ! is_valid_version &amp;#34;$latest_version&amp;#34;; then
    echo &amp;#34;Error: {$latest_version} is not a valid Elasticsearch stable version&amp;#34;
    exit 1
  fi

  echo &amp;#34;$latest_version&amp;#34;
}

# Detect if running on LXC container
detect_lxc() {
    # Check /proc/1/environ for LXC container identifier
    if grep -qa &amp;#34;container=lxc&amp;#34; /proc/1/environ 2&amp;gt;/dev/null; then
      return 0
    fi
    # Check /proc/self/cgroup for LXC references
    if grep -q &amp;#34;lxc&amp;#34; /proc/self/cgroup 2&amp;gt;/dev/null; then
      return 0
    fi
    # Check for LXC in /sys/fs/cgroup
    if grep -q &amp;#34;lxc&amp;#34; /sys/fs/cgroup/* 2&amp;gt;/dev/null; then  
      return 0
    fi
    # Use systemd-detect-virt if available
    if command -v systemd-detect-virt &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then
      if [ &amp;#34;$(systemd-detect-virt)&amp;#34; = &amp;#34;lxc&amp;#34; ]; then
        return 0
      fi
    fi
    return 1
}

# Get linux distribution
get_os_info() {
  if [ -f /etc/os-release ]; then
      # Most modern Linux distributions have this file
      . /etc/os-release
      echo &amp;#34;Distribution: $NAME&amp;#34;
      echo &amp;#34;Version: $VERSION&amp;#34;
  elif [ -f /etc/lsb-release ]; then
      # For older distributions using LSB (Linux Standard Base)
      . /etc/lsb-release
      echo &amp;#34;Distribution: $DISTRIB_ID&amp;#34;
      echo &amp;#34;Version: $DISTRIB_RELEASE&amp;#34;
  elif [ -f /etc/debian_version ]; then
      # For Debian-based distributions without os-release or lsb-release
      echo &amp;#34;Distribution: Debian&amp;#34;
      echo &amp;#34;Version: $(cat /etc/debian_version)&amp;#34;
  elif [ -f /etc/redhat-release ]; then
      # For Red Hat-based distributions
      echo &amp;#34;Distribution: $(cat /etc/redhat-release)&amp;#34;
  elif [ -n &amp;#34;${OSTYPE+x}&amp;#34; ]; then
    if [ &amp;#34;${OSTYPE#darwin}&amp;#34; != &amp;#34;$OSTYPE&amp;#34; ]; then
        # macOS detection
        echo &amp;#34;Distribution: macOS&amp;#34;
        echo &amp;#34;Version: $(sw_vers -productVersion)&amp;#34;
    elif [ &amp;#34;$OSTYPE&amp;#34; = &amp;#34;cygwin&amp;#34; ] || [ &amp;#34;$OSTYPE&amp;#34; = &amp;#34;msys&amp;#34; ] || [ &amp;#34;$OSTYPE&amp;#34; = &amp;#34;win32&amp;#34; ]; then
        # Windows detection in environments like Git Bash, Cygwin, or MinGW
        echo &amp;#34;Distribution: Windows&amp;#34;
        echo &amp;#34;Version: $(cmd.exe /c ver | tr -d &amp;#39;\r&amp;#39;)&amp;#34;
    elif [ &amp;#34;$OSTYPE&amp;#34; = &amp;#34;linux-gnu&amp;#34; ] &amp;amp;&amp;amp; uname -r | grep -q &amp;#34;Microsoft&amp;#34;; then
        # Windows Subsystem for Linux (WSL) detection
        echo &amp;#34;Distribution: Windows (WSL)&amp;#34;
        echo &amp;#34;Version: $(uname -r)&amp;#34;
    fi
  else
      echo &amp;#34;Unknown operating system&amp;#34;
  fi
  if [ -f /proc/version ]; then
    # Check if running on WSL2 or WSL1 for Microsoft
    if grep -q &amp;#34;WSL2&amp;#34; /proc/version; then
      echo &amp;#34;Running on WSL2&amp;#34;
    elif grep -q &amp;#34;microsoft&amp;#34; /proc/version; then
      echo &amp;#34;Running on WSL1&amp;#34;
    fi
  fi
}

# Check if a command exists
available() { command -v &amp;#34;$1&amp;#34; &amp;gt;/dev/null; }

# Revert the status, removing containers, volumes, network and folder
cleanup() {
  if [ -d &amp;#34;./../$folder_to_clean&amp;#34; ]; then
    if [ -f &amp;#34;docker-compose.yml&amp;#34; ]; then
      $docker_clean &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
      $docker_remove_volumes &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
    fi
    cd ..
    rm -rf &amp;#34;${folder_to_clean}&amp;#34;
  fi
}

# Generate the error log
# parameter 1: error message
# parameter 2: the container names to retrieve, separated by comma
generate_error_log() {
  msg=&amp;#34;$1&amp;#34;
  docker_services=&amp;#34;$2&amp;#34;
  error_file=&amp;#34;$error_log&amp;#34;
  if [ -d &amp;#34;./../$folder_to_clean&amp;#34; ]; then
    error_file=&amp;#34;./../$error_log&amp;#34;
  fi
  if [ -n &amp;#34;${msg}&amp;#34; ]; then
    echo &amp;#34;${msg}&amp;#34; &amp;gt; &amp;#34;$error_file&amp;#34;
  fi
  { 
    echo &amp;#34;Start-local version: ${version}&amp;#34;
    echo &amp;#34;Docker engine: $(docker --version)&amp;#34;
    echo &amp;#34;Docker compose: ${docker_version}&amp;#34;
    get_os_info
  } &amp;gt;&amp;gt; &amp;#34;$error_file&amp;#34; 
  for service in $docker_services; do
    echo &amp;#34;-- Logs of service ${service}:&amp;#34; &amp;gt;&amp;gt; &amp;#34;$error_file&amp;#34;
    docker logs &amp;#34;${service}&amp;#34; &amp;gt;&amp;gt; &amp;#34;$error_file&amp;#34; 2&amp;gt; /dev/null
  done
  echo &amp;#34;An error log has been generated in ${error_log} file.&amp;#34;
  echo &amp;#34;If you need assistance, open an issue at https://github.com/elastic/start-local/issues&amp;#34;
}

# Compare versions
# parameter 1: version to compare
# parameter 2: version to compare
compare_versions() {
  v1=$1
  v2=$2

  original_ifs=&amp;#34;$IFS&amp;#34;
  IFS=&amp;#39;.&amp;#39;
  # shellcheck disable=SC2086
  set -- $v1; v1_major=${1:-0}; v1_minor=${2:-0}; v1_patch=${3:-0}
  IFS=&amp;#39;.&amp;#39;
  # shellcheck disable=SC2086
  set -- $v2; v2_major=${1:-0}; v2_minor=${2:-0}; v2_patch=${3:-0}
  IFS=&amp;#34;$original_ifs&amp;#34;

  [ &amp;#34;$v1_major&amp;#34; -lt &amp;#34;$v2_major&amp;#34; ] &amp;amp;&amp;amp; echo &amp;#34;lt&amp;#34; &amp;amp;&amp;amp; return 0
  [ &amp;#34;$v1_major&amp;#34; -gt &amp;#34;$v2_major&amp;#34; ] &amp;amp;&amp;amp; echo &amp;#34;gt&amp;#34; &amp;amp;&amp;amp; return 0

  [ &amp;#34;$v1_minor&amp;#34; -lt &amp;#34;$v2_minor&amp;#34; ] &amp;amp;&amp;amp; echo &amp;#34;lt&amp;#34; &amp;amp;&amp;amp; return 0
  [ &amp;#34;$v1_minor&amp;#34; -gt &amp;#34;$v2_minor&amp;#34; ] &amp;amp;&amp;amp; echo &amp;#34;gt&amp;#34; &amp;amp;&amp;amp; return 0

  [ &amp;#34;$v1_patch&amp;#34; -lt &amp;#34;$v2_patch&amp;#34; ] &amp;amp;&amp;amp; echo &amp;#34;lt&amp;#34; &amp;amp;&amp;amp; return 0
  [ &amp;#34;$v1_patch&amp;#34; -gt &amp;#34;$v2_patch&amp;#34; ] &amp;amp;&amp;amp; echo &amp;#34;gt&amp;#34; &amp;amp;&amp;amp; return 0

  echo &amp;#34;eq&amp;#34;
}

# Wait for availability of Kibana
# parameter: timeout in seconds
wait_for_kibana() {
  timeout=&amp;#34;${1:-60}&amp;#34;
  echo &amp;#34;- Waiting for Kibana to be ready&amp;#34;
  echo
  start_time=&amp;#34;$(date +%s)&amp;#34;
  until curl -s -I http://localhost:5601 | grep -q &amp;#39;HTTP/1.1 302 Found&amp;#39;; do
    elapsed_time=&amp;#34;$(($(date +%s) - start_time))&amp;#34;
    if [ &amp;#34;$elapsed_time&amp;#34; -ge &amp;#34;$timeout&amp;#34; ]; then
      error_msg=&amp;#34;Error: Kibana timeout of ${timeout} sec&amp;#34;
      echo &amp;#34;$error_msg&amp;#34;
      generate_error_log &amp;#34;${error_msg}&amp;#34; &amp;#34;${elasticsearch_container_name} ${kibana_container_name} kibana-settings&amp;#34;
      cleanup
      exit 1
    fi
    sleep 2
  done
}

# Generates a random password with letters and numbers
# parameter: size of the password (default is 8 characters)
random_password() {
  LENGTH=&amp;#34;${1:-8}&amp;#34;
  LC_ALL=C tr -dc &amp;#39;A-Za-z0-9&amp;#39; &amp;lt; /dev/urandom | head -c &amp;#34;${LENGTH}&amp;#34;
}

# Create an API key for Elasticsearch
# parameter 1: the Elasticsearch password
# parameter 2: name of the API key to generate
create_api_key() {
  es_password=$1
  name=$2
  response=&amp;#34;$(curl -s -u &amp;#34;elastic:${es_password}&amp;#34; -X POST http://localhost:9200/_security/api_key -d &amp;#34;{\&amp;#34;name\&amp;#34;: \&amp;#34;${name}\&amp;#34;}&amp;#34; -H &amp;#34;Content-Type: application/json&amp;#34;)&amp;#34;
  if [ -z &amp;#34;$response&amp;#34; ]; then
    echo &amp;#34;&amp;#34;
  else
    api_key=&amp;#34;$(echo &amp;#34;$response&amp;#34; | grep -Eo &amp;#39;&amp;#34;encoded&amp;#34;:&amp;#34;[A-Za-z0-9+/=]+&amp;#39; | grep -Eo &amp;#39;[A-Za-z0-9+/=]+&amp;#39; | tail -n 1)&amp;#34;
    echo &amp;#34;$api_key&amp;#34;
  fi
}

# Check if a container is runnning
# parameter: the name of the container
check_container_running() {
  container_name=$1
  containers=&amp;#34;$(docker ps --format &amp;#39;{{.Names}}&amp;#39;)&amp;#34;
  if echo &amp;#34;$containers&amp;#34; | grep -q &amp;#34;^${container_name}$&amp;#34;; then
    echo &amp;#34;The docker container &amp;#39;$container_name&amp;#39; is already running!&amp;#34;
    echo &amp;#34;You can have only one running at time.&amp;#34;
    echo &amp;#34;To stop the container run the following command:&amp;#34;
    echo
    echo &amp;#34;docker stop $container_name&amp;#34;
    exit 1
  fi
}

# Check the available disk space in GB
# parameter: required size in GB
check_disk_space_gb() {
  required=$1
  available_gb=$(($(df -k / | awk &amp;#39;NR==2 {print $4}&amp;#39;) / 1024 / 1024))
  if [ &amp;#34;$available_gb&amp;#34; -lt &amp;#34;$required&amp;#34; ]; then
    echo &amp;#34;Error: only ${available_gb} GB of disk space available; ${required} GB required for the installation&amp;#34;
    exit 1
  fi
}

check_requirements() {
  # Check the requirements
  check_disk_space_gb ${min_disk_space_required}
  if ! available &amp;#34;curl&amp;#34;; then
    echo &amp;#34;Error: curl command is required&amp;#34;
    echo &amp;#34;You can install it from https://curl.se/download.html.&amp;#34;
    exit 1
  fi
  if ! available &amp;#34;grep&amp;#34;; then
    echo &amp;#34;Error: grep command is required&amp;#34;
    echo &amp;#34;You can install it from https://www.gnu.org/software/grep/.&amp;#34;
    exit 1
  fi
  need_wait_for_kibana=true
  # Check for &amp;#34;docker compose&amp;#34; or &amp;#34;docker-compose&amp;#34;
  set +e
  if ! docker compose &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then
    if ! available &amp;#34;docker-compose&amp;#34;; then
      if ! available &amp;#34;docker&amp;#34;; then
        echo &amp;#34;Error: docker command is required&amp;#34;
        echo &amp;#34;You can install it from https://docs.docker.com/engine/install/.&amp;#34;
        exit 1
      fi
      echo &amp;#34;Error: docker compose is required&amp;#34;
      echo &amp;#34;You can install it from https://docs.docker.com/compose/install/&amp;#34;
      exit 1
    fi
    docker=&amp;#34;docker-compose up -d&amp;#34;
    docker_stop=&amp;#34;docker-compose stop&amp;#34;
    docker_clean=&amp;#34;docker-compose rm -fsv&amp;#34;
    docker_remove_volumes=&amp;#34;docker-compose down -v&amp;#34;
    docker_version=$(docker-compose --version | head -n 1 | grep -Eo &amp;#39;[0-9]+\.[0-9]+\.[0-9]+&amp;#39;)
    if [ &amp;#34;$(compare_versions &amp;#34;$docker_version&amp;#34; &amp;#34;$min_docker_compose&amp;#34;)&amp;#34; = &amp;#34;lt&amp;#34; ]; then
      echo &amp;#34;Unfortunately we don&amp;#39;t support docker compose ${docker_version}. The minimum required version is $min_docker_compose.&amp;#34;
      echo &amp;#34;You can migrate you docker compose from https://docs.docker.com/compose/migrate/&amp;#34;
      cleanup
      exit 1
    fi 
  else
    docker_stop=&amp;#34;docker compose stop&amp;#34;
    docker_clean=&amp;#34;docker compose rm -fsv&amp;#34;
    docker_remove_volumes=&amp;#34;docker compose down -v&amp;#34;
    docker_version=$(docker compose version | head -n 1 | grep -Eo &amp;#39;[0-9]+\.[0-9]+\.[0-9]+&amp;#39;)
    # --wait option has been introduced in 2.1.1+
    if [ &amp;#34;$(compare_versions &amp;#34;$docker_version&amp;#34; &amp;#34;2.1.0&amp;#34;)&amp;#34; = &amp;#34;gt&amp;#34; ]; then
      docker=&amp;#34;docker compose up --wait&amp;#34;
      need_wait_for_kibana=false
    else
      docker=&amp;#34;docker compose up -d&amp;#34;
    fi
  fi
  set -e
}

check_installation_folder() {
  # Check if $installation_folder exists
  folder=$installation_folder
  if [ -d &amp;#34;$folder&amp;#34; ]; then
    if [ -n &amp;#34;$(ls -A &amp;#34;$folder&amp;#34;)&amp;#34; ]; then
      echo &amp;#34;It seems you have already a start-local installation in &amp;#39;${folder}&amp;#39;.&amp;#34;
      if [ -f &amp;#34;$folder/uninstall.sh&amp;#34; ]; then
        echo &amp;#34;I cannot proceed unless you uninstall it, using the following command:&amp;#34;
        echo &amp;#34;cd $folder &amp;amp;&amp;amp; ./uninstall.sh&amp;#34;
      else
        echo &amp;#34;I did not find the uninstall.sh file, you need to proceed manually.&amp;#34;
        if [ -f &amp;#34;$folder/docker-compose.yml&amp;#34; ] &amp;amp;&amp;amp; [ -f &amp;#34;$folder/.env&amp;#34; ]; then
          echo &amp;#34;Execute the following commands:&amp;#34;
          echo &amp;#34;cd $folder&amp;#34;
          echo &amp;#34;$docker_clean&amp;#34;
          echo &amp;#34;$docker_remove_volumes&amp;#34;
          echo &amp;#34;cd ..&amp;#34;
          echo &amp;#34;rm -rf $folder&amp;#34;
        fi
      fi
      exit 1
    fi
  fi
}

check_docker_services() {
  # Check for docker containers running
  check_container_running &amp;#34;$elasticsearch_container_name&amp;#34;
  check_container_running &amp;#34;$kibana_container_name&amp;#34;
  check_container_running &amp;#34;$kibana_settings_container_name&amp;#34;
}

create_installation_folder() {
  # If $folder already exists, it is empty, see above
  if [ ! -d &amp;#34;$folder&amp;#34; ]; then 
    mkdir &amp;#34;$folder&amp;#34;
  fi
  cd &amp;#34;$folder&amp;#34;
  folder_to_clean=$folder
}

generate_passwords() {
  # Generate random passwords
  es_password=&amp;#34;${ES_LOCAL_PASSWORD:-$(random_password)}&amp;#34;
  if  [ -z &amp;#34;${esonly:-}&amp;#34; ]; then
    kibana_password=&amp;#34;$(random_password)&amp;#34;
    kibana_encryption_key=&amp;#34;$(random_password 32)&amp;#34;
  fi
}

choose_es_version() {
  if [ -z &amp;#34;${es_version:-}&amp;#34; ]; then
    # Get the latest Elasticsearch version
    es_version=&amp;#34;$(get_latest_version)&amp;#34;
  fi
  # Fix for ARM64: add suffix &amp;#34;-arm64&amp;#34;
  if is_arm64 &amp;amp;&amp;amp; [ &amp;#34;${es_version##*-arm64}&amp;#34; = &amp;#34;$es_version&amp;#34; ]; then
    es_version=&amp;#34;${es_version}-arm64&amp;#34;
  fi
}

create_env_file() {
  # Create the .env file
  cat &amp;gt; .env &amp;lt;&amp;lt;- EOM
START_LOCAL_VERSION=$version
ES_LOCAL_VERSION=$es_version
ES_LOCAL_CONTAINER_NAME=$elasticsearch_container_name
ES_LOCAL_PASSWORD=$es_password
ES_LOCAL_PORT=9200
ES_LOCAL_URL=http://localhost:\${ES_LOCAL_PORT}
ES_LOCAL_HEAP_INIT=128m
ES_LOCAL_HEAP_MAX=2g
ES_LOCAL_DISK_SPACE_REQUIRED=1gb
EOM

  if  [ -z &amp;#34;${esonly:-}&amp;#34; ]; then
    cat &amp;gt;&amp;gt; .env &amp;lt;&amp;lt;- EOM
KIBANA_LOCAL_CONTAINER_NAME=$kibana_container_name
KIBANA_LOCAL_SETTINGS_CONTAINER_NAME=$kibana_settings_container_name
KIBANA_LOCAL_PORT=5601
KIBANA_LOCAL_PASSWORD=$kibana_password
KIBANA_ENCRYPTION_KEY=$kibana_encryption_key
EOM
  fi
}

# Create the start script (start.sh)
# including the license update if trial expired
create_start_file() {
  today=$(date +%s)
  expire=$((today + 3600*24*30))

  cat &amp;gt; start.sh &amp;lt;&amp;lt;-&amp;#39;EOM&amp;#39;
#!/bin/sh
# Start script for start-local
# More information: https://github.com/elastic/start-local
set -eu

SCRIPT_DIR=&amp;#34;$(cd &amp;#34;$(dirname &amp;#34;$0&amp;#34;)&amp;#34; &amp;amp;&amp;amp; pwd)&amp;#34;
cd &amp;#34;${SCRIPT_DIR}&amp;#34;
today=$(date +%s)
. ./.env
# Check disk space
available_gb=$(($(df -k / | awk &amp;#39;NR==2 {print $4}&amp;#39;) / 1024 / 1024))
required=$(echo &amp;#34;${ES_LOCAL_DISK_SPACE_REQUIRED}&amp;#34; | grep -Eo &amp;#39;[0-9]+&amp;#39;)
if [ &amp;#34;$available_gb&amp;#34; -lt &amp;#34;$required&amp;#34; ]; then
  echo &amp;#34;----------------------------------------------------------------------------&amp;#34;
  echo &amp;#34;WARNING: Disk space is below the ${required} GB limit. Elasticsearch will be&amp;#34;
  echo &amp;#34;executed in read-only mode. Please free up disk space to resolve this issue.&amp;#34;
  echo &amp;#34;----------------------------------------------------------------------------&amp;#34;
  echo &amp;#34;Press ENTER to confirm.&amp;#34;
  # shellcheck disable=SC2034
  read -r line
fi
EOM
  if [ &amp;#34;$need_wait_for_kibana&amp;#34; = true ]; then
    cat &amp;gt;&amp;gt; start.sh &amp;lt;&amp;lt;-&amp;#39;EOM&amp;#39;
wait_for_kibana() {
  _timeout=&amp;#34;${1:-60}&amp;#34;
  echo &amp;#34;- Waiting for Kibana to be ready&amp;#34;
  echo
  _start_time=&amp;#34;$(date +%s)&amp;#34;
  until curl -s -I http://localhost:5601 | grep -q &amp;#39;HTTP/1.1 302 Found&amp;#39;; do
    elapsed_time=&amp;#34;$(($(date +%s) - _start_time))&amp;#34;
    if [ &amp;#34;$elapsed_time&amp;#34; -ge &amp;#34;$_timeout&amp;#34; ]; then
      echo &amp;#34;Error: Kibana timeout of ${_timeout} sec&amp;#34;
      exit 1
    fi
    sleep 2
  done
}

EOM
  fi

  cat &amp;gt;&amp;gt; start.sh &amp;lt;&amp;lt;- EOM
if [ -z &amp;#34;\${ES_LOCAL_LICENSE:-}&amp;#34; ] &amp;amp;&amp;amp; [ &amp;#34;\$today&amp;#34; -gt $expire ]; then
  echo &amp;#34;---------------------------------------------------------------------&amp;#34;
  echo &amp;#34;The one-month trial period has expired. You can continue using the&amp;#34;
  echo &amp;#34;Free and open Basic license or request to extend the trial for&amp;#34;
  echo &amp;#34;another 30 days using this form:&amp;#34;
  echo &amp;#34;https://www.elastic.co/trialextension&amp;#34;
  echo &amp;#34;---------------------------------------------------------------------&amp;#34;
  echo &amp;#34;For more info about the license: https://www.elastic.co/subscriptions&amp;#34;
  echo
  echo &amp;#34;Updating the license...&amp;#34;
  $docker elasticsearch &amp;gt;/dev/null 2&amp;gt;&amp;amp;1
  result=\$(curl -s -X POST &amp;#34;\${ES_LOCAL_URL}/_license/start_basic?acknowledge=true&amp;#34; -H &amp;#34;Authorization: ApiKey \${ES_LOCAL_API_KEY}&amp;#34; -o /dev/null -w &amp;#39;%{http_code}\n&amp;#39;)
  if [ &amp;#34;\$result&amp;#34; = &amp;#34;200&amp;#34; ]; then
    echo &amp;#34;‚úÖ Basic license successfully installed&amp;#34;
    echo &amp;#34;ES_LOCAL_LICENSE=basic&amp;#34; &amp;gt;&amp;gt; .env
  else 
    echo &amp;#34;Error: I cannot update the license&amp;#34;
    result=\$(curl -s -X GET &amp;#34;\${ES_LOCAL_URL}&amp;#34; -H &amp;#34;Authorization: ApiKey \${ES_LOCAL_API_KEY}&amp;#34; -o /dev/null -w &amp;#39;%{http_code}\n&amp;#39;)
    if [ &amp;#34;\$result&amp;#34; != &amp;#34;200&amp;#34; ]; then
      echo &amp;#34;Elasticsearch is not running.&amp;#34;
    fi
    exit 1
  fi
  echo
fi
$docker
EOM

  if [ &amp;#34;$need_wait_for_kibana&amp;#34; = true ]; then
    cat &amp;gt;&amp;gt; start.sh &amp;lt;&amp;lt;-&amp;#39;EOM&amp;#39;
wait_for_kibana 120
EOM
  fi
  chmod +x start.sh
}

# Create the stop script (stop.sh)
create_stop_file() {
  cat &amp;gt; stop.sh &amp;lt;&amp;lt;-&amp;#39;EOM&amp;#39;
#!/bin/sh
# Stop script for start-local
# More information: https://github.com/elastic/start-local
set -eu

SCRIPT_DIR=&amp;#34;$(cd &amp;#34;$(dirname &amp;#34;$0&amp;#34;)&amp;#34; &amp;amp;&amp;amp; pwd)&amp;#34;
cd &amp;#34;${SCRIPT_DIR}&amp;#34;
EOM

  cat &amp;gt;&amp;gt; stop.sh &amp;lt;&amp;lt;- EOM
$docker_stop
EOM
  chmod +x stop.sh
}

# Create the uninstall script (uninstall.sh)
create_uninstall_file() {

  cat &amp;gt; uninstall.sh &amp;lt;&amp;lt;-&amp;#39;EOM&amp;#39;
#!/bin/sh
# Uninstall script for start-local
# More information: https://github.com/elastic/start-local
set -eu

SCRIPT_DIR=&amp;#34;$(cd &amp;#34;$(dirname &amp;#34;$0&amp;#34;)&amp;#34; &amp;amp;&amp;amp; pwd)&amp;#34;

ask_confirmation() {
    echo &amp;#34;Do you confirm? (yes/no)&amp;#34;
    read -r answer
    case &amp;#34;$answer&amp;#34; in
        yes|y|Y|Yes|YES)
            return 0  # true
            ;;
        no|n|N|No|NO)
            return 1  # false
            ;;
        *)
            echo &amp;#34;Please answer yes or no.&amp;#34;
            ask_confirmation  # Ask again if the input is invalid
            ;;
    esac
}

cd &amp;#34;${SCRIPT_DIR}&amp;#34;
if [ ! -e &amp;#34;docker-compose.yml&amp;#34; ]; then
  echo &amp;#34;Error: I cannot find the docker-compose.yml file&amp;#34;
  echo &amp;#34;I cannot uninstall start-local.&amp;#34;
fi
if [ ! -e &amp;#34;.env&amp;#34; ]; then
  echo &amp;#34;Error: I cannot find the .env file&amp;#34;
  echo &amp;#34;I cannot uninstall start-local.&amp;#34;
fi
echo &amp;#34;This script will uninstall start-local.&amp;#34;
echo &amp;#34;All data will be deleted and cannot be recovered.&amp;#34;
if ask_confirmation; then
EOM

  cat &amp;gt;&amp;gt; uninstall.sh &amp;lt;&amp;lt;- EOM
  $docker_clean
  $docker_remove_volumes
  rm docker-compose.yml .env uninstall.sh start.sh stop.sh config/telemetry.yml
  if [ -z &amp;#34;\$(ls -A config)&amp;#34; ]; then
    rm -d config
  fi
  echo
  echo &amp;#34;Do you want to remove the following Docker images?&amp;#34;
  echo &amp;#34;- docker.elastic.co/elasticsearch/elasticsearch:${es_version}&amp;#34;
EOM

  if  [ -z &amp;#34;${esonly:-}&amp;#34; ]; then
    cat &amp;gt;&amp;gt; uninstall.sh &amp;lt;&amp;lt;- EOM
  echo &amp;#34;- docker.elastic.co/kibana/kibana:${es_version}&amp;#34;
EOM
  fi

  cat &amp;gt;&amp;gt; uninstall.sh &amp;lt;&amp;lt;- EOM
  if ask_confirmation; then
    if docker rmi &amp;#34;docker.elastic.co/elasticsearch/elasticsearch:${es_version}&amp;#34; &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then
      echo &amp;#34;Image docker.elastic.co/elasticsearch/elasticsearch:${es_version} removed successfully&amp;#34;
    else
      echo &amp;#34;Failed to remove image docker.elastic.co/elasticsearch/elasticsearch:${es_version}. It might be in use.&amp;#34;
    fi
EOM

  if  [ -z &amp;#34;${esonly:-}&amp;#34; ]; then
    cat &amp;gt;&amp;gt; uninstall.sh &amp;lt;&amp;lt;- EOM
    if docker rmi docker.elastic.co/kibana/kibana:${es_version} &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; then
      echo &amp;#34;Image docker.elastic.co/kibana/kibana:${es_version} removed successfully&amp;#34;
    else
      echo &amp;#34;Failed to remove image docker.elastic.co/kibana/kibana:${es_version}. It might be in use.&amp;#34;
    fi
EOM
  fi

  cat &amp;gt;&amp;gt; uninstall.sh &amp;lt;&amp;lt;- EOM
  fi
  echo &amp;#34;Start-local successfully removed&amp;#34;
fi
EOM
  chmod +x uninstall.sh
}

create_docker_compose_file() {
  # Create the docker-compose-yml file
  cat &amp;gt; docker-compose.yml &amp;lt;&amp;lt;-&amp;#39;EOM&amp;#39;
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_LOCAL_VERSION}
    container_name: ${ES_LOCAL_CONTAINER_NAME}
    volumes:
      - dev-elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 127.0.0.1:${ES_LOCAL_PORT}:9200
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ES_LOCAL_PASSWORD}
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - xpack.license.self_generated.type=trial
      - xpack.ml.use_auto_machine_memory_percent=true
      - ES_JAVA_OPTS=-Xms${ES_LOCAL_HEAP_INIT} -Xmx${ES_LOCAL_HEAP_MAX}
      - cluster.routing.allocation.disk.watermark.low=${ES_LOCAL_DISK_SPACE_REQUIRED}
      - cluster.routing.allocation.disk.watermark.high=${ES_LOCAL_DISK_SPACE_REQUIRED}
      - cluster.routing.allocation.disk.watermark.flood_stage=${ES_LOCAL_DISK_SPACE_REQUIRED}
EOM
  
  # Fix for JDK AArch64 issue, see https://bugs.openjdk.org/browse/JDK-8345296
  if is_arm64; then
  cat &amp;gt;&amp;gt; docker-compose.yml &amp;lt;&amp;lt;-&amp;#39;EOM&amp;#39;
      - &amp;#34;_JAVA_OPTIONS=-XX:UseSVE=0&amp;#34;
EOM
  fi

  # Fix for OCI issue on LXC, see https://github.com/elastic/start-local/issues/27
  if ! detect_lxc; then
  cat &amp;gt;&amp;gt; docker-compose.yml &amp;lt;&amp;lt;-&amp;#39;EOM&amp;#39;
    ulimits:
      memlock:
        soft: -1
        hard: -1
EOM
  fi

  cat &amp;gt;&amp;gt; docker-compose.yml &amp;lt;&amp;lt;-&amp;#39;EOM&amp;#39;
    healthcheck:
      test:
        [
          &amp;#34;CMD-SHELL&amp;#34;,
          &amp;#34;curl --output /dev/null --silent --head --fail -u elastic:${ES_LOCAL_PASSWORD} http://elasticsearch:9200&amp;#34;,
        ]
      interval: 10s
      timeout: 10s
      retries: 30

EOM

if  [ -z &amp;#34;${esonly:-}&amp;#34; ]; then
  cat &amp;gt;&amp;gt; docker-compose.yml &amp;lt;&amp;lt;-&amp;#39;EOM&amp;#39;
  kibana_settings:
    depends_on:
      elasticsearch:
        condition: service_healthy
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_LOCAL_VERSION}
    container_name: ${KIBANA_LOCAL_SETTINGS_CONTAINER_NAME}
    restart: &amp;#39;no&amp;#39;
    command: &amp;gt;
      bash -c &amp;#39;
        echo &amp;#34;Setup the kibana_system password&amp;#34;;
        start_time=$$(date +%s);
        timeout=60;
        until curl -s -u &amp;#34;elastic:${ES_LOCAL_PASSWORD}&amp;#34; -X POST http://elasticsearch:9200/_security/user/kibana_system/_password -d &amp;#34;{\&amp;#34;password\&amp;#34;:\&amp;#34;${KIBANA_LOCAL_PASSWORD}\&amp;#34;}&amp;#34; -H &amp;#34;Content-Type: application/json&amp;#34; | grep -q &amp;#34;^{}&amp;#34;; do
          if [ $$(($$(date +%s) - $$start_time)) -ge $$timeout ]; then
            echo &amp;#34;Error: Elasticsearch timeout&amp;#34;;
            exit 1;
          fi;
          sleep 2;
        done;
      &amp;#39;

  kibana:
    depends_on:
      kibana_settings:
        condition: service_completed_successfully
    image: docker.elastic.co/kibana/kibana:${ES_LOCAL_VERSION}
    container_name: ${KIBANA_LOCAL_CONTAINER_NAME}
    volumes:
      - dev-kibana:/usr/share/kibana/data
      - ./config/telemetry.yml:/usr/share/kibana/config/telemetry.yml
    ports:
      - 127.0.0.1:${KIBANA_LOCAL_PORT}:5601
    environment:
      - SERVER_NAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_LOCAL_PASSWORD}
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=${KIBANA_ENCRYPTION_KEY}
      - ELASTICSEARCH_PUBLICBASEURL=http://localhost:${ES_LOCAL_PORT}
    healthcheck:
      test:
        [
          &amp;#34;CMD-SHELL&amp;#34;,
          &amp;#34;curl -s -I http://kibana:5601 | grep -q &amp;#39;HTTP/1.1 302 Found&amp;#39;&amp;#34;,
        ]
      interval: 10s
      timeout: 10s
      retries: 30

EOM
fi

  cat &amp;gt;&amp;gt; docker-compose.yml &amp;lt;&amp;lt;-&amp;#39;EOM&amp;#39;
volumes:
  dev-elasticsearch:
EOM

if  [ -z &amp;#34;${esonly:-}&amp;#34; ]; then
  cat &amp;gt;&amp;gt; docker-compose.yml &amp;lt;&amp;lt;-&amp;#39;EOM&amp;#39;
  dev-kibana:
EOM
fi

create_kibana_config
}

create_kibana_config() {
  if [ ! -d &amp;#34;config&amp;#34; ]; then
    mkdir config
  fi
  # Create telemetry
  cat &amp;gt; config/telemetry.yml &amp;lt;&amp;lt;- EOM
start-local:
  version: ${version}
EOM
}

print_steps() {
  if  [ -z &amp;#34;${esonly:-}&amp;#34; ]; then
    echo &amp;#34;‚åõÔ∏è Setting up Elasticsearch and Kibana v${es_version}...&amp;#34;
  else
    echo &amp;#34;‚åõÔ∏è Setting up Elasticsearch v${es_version}...&amp;#34;
  fi
  echo
  echo &amp;#34;- Generated random passwords&amp;#34;
  echo &amp;#34;- Created the ${folder} folder containing the files:&amp;#34;
  echo &amp;#34;  - .env, with settings&amp;#34;
  echo &amp;#34;  - docker-compose.yml, for Docker services&amp;#34;
  echo &amp;#34;  - start/stop/uninstall commands&amp;#34;
}

running_docker_compose() {
  # Execute docker compose
  echo &amp;#34;- Running ${docker}&amp;#34;
  echo
  set +e
  if ! $docker; then
    error_msg=&amp;#34;Error: ${docker} command failed!&amp;#34;
    echo &amp;#34;$error_msg&amp;#34;
    if  [ -z &amp;#34;${esonly:-}&amp;#34; ]; then
      generate_error_log &amp;#34;${error_msg}&amp;#34; &amp;#34;${elasticsearch_container_name} ${kibana_container_name} kibana_settings&amp;#34;
    else
      generate_error_log &amp;#34;${error_msg}&amp;#34; &amp;#34;${elasticsearch_container_name}&amp;#34;
    fi
    cleanup
    exit 1
  fi
  set -e
}

api_key() {
  # Create an API key for Elasticsearch
  api_key=$(create_api_key &amp;#34;$es_password&amp;#34; &amp;#34;$api_key_name&amp;#34;)
  if [ -n &amp;#34;$api_key&amp;#34; ]; then
    echo &amp;#34;ES_LOCAL_API_KEY=${api_key}&amp;#34; &amp;gt;&amp;gt; .env
  fi
}

kibana_wait() {
  if [ &amp;#34;$need_wait_for_kibana&amp;#34; = true ]; then
    wait_for_kibana 120
  fi
}

success() {
  echo
  if  [ -z &amp;#34;${esonly:-}&amp;#34; ]; then
    echo &amp;#34;üéâ Congrats, Elasticsearch and Kibana are installed and running in Docker!&amp;#34;
    echo
    echo &amp;#34;üåê Open your browser at http://localhost:5601&amp;#34;
    echo
    echo &amp;#34;   Username: elastic&amp;#34;
    echo &amp;#34;   Password: ${es_password}&amp;#34;
    echo
  else
    echo &amp;#34;üéâ Congrats, Elasticsearch is installed and running in Docker!&amp;#34;
  fi
  
  echo &amp;#34;üîå Elasticsearch API endpoint: http://localhost:9200&amp;#34;
  if [ -n &amp;#34;$api_key&amp;#34; ]; then
    echo &amp;#34;üîë API key: $api_key&amp;#34;
    echo
  else
    echo &amp;#34;üîë Use basic auth or create an API key&amp;#34;
    echo &amp;#34;https://www.elastic.co/guide/en/kibana/current/api-keys.html&amp;#34;
    echo
  fi
  echo
  echo &amp;#34;Learn more at https://github.com/elastic/start-local&amp;#34;

  echo
}

main() {
  parse_args &amp;#34;$@&amp;#34;
  startup
  check_requirements
  check_installation_folder
  check_docker_services
  create_installation_folder
  generate_passwords
  choose_es_version
  create_start_file
  create_stop_file
  create_uninstall_file
  create_env_file
  create_docker_compose_file
  print_steps
  running_docker_compose
  api_key
  kibana_wait
  success
}

ctrl_c() { 
  cleanup
  exit 1
}

# Trap ctrl-c
trap ctrl_c INT

# Execute the script
main &amp;#34;$@&amp;#34;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Tree</title>
      <link>https://heyuuuu77.github.io/posts/tree/</link>
      <pubDate>Fri, 06 Jun 2025 15:53:55 +0800</pubDate>
      <guid>https://heyuuuu77.github.io/posts/tree/</guid>
      <description>&lt;h3 id=&#34;ÂìàÂ∏åÂÜ≤Á™ÅÁöÑÂéüÂõ†‰ª•ÂèäËß£ÂÜ≥ÂäûÊ≥ï&#34;&gt;ÂìàÂ∏åÂÜ≤Á™ÅÁöÑÂéüÂõ†‰ª•ÂèäËß£ÂÜ≥ÂäûÊ≥ï&lt;/h3&gt;
&lt;p&gt;hashÁÆóÊ≥ïÊòØ‰∏ÄÁßçÊï∞ÊçÆÂéãÁº©ÊñπÂºèÔºåÁî±‰∫éÁÆóÊ≥ï‰∫ßÁîüÁöÑÂìàÂ∏åÂÄºÁöÑÊï∞ÈáèÊòØÊúâÈôêÁöÑÔºåÊâÄ‰ª•ÂΩìÊï∞ÊçÆÈáèÂ§ßÊó∂Â∞±‰ºöÂá∫Áé∞ÂìàÂ∏åÂÄº‰∏çÂ§üÁî®ÁöÑÊÉÖÂÜµÔºåÂ§ö‰∏™Êï∞ÊçÆÈÄöËøáÁÆóÊ≥ïÁöÑÂá∫‰∫ÜÁõ∏ÂêåÁöÑÂìàÂ∏åÂÄº„ÄÇ‰ªéËÄå‰∫ßÁîü‰∫ÜÂÜ≤Á™Å„ÄÇ&lt;/p&gt;</description>
    </item>
    <item>
      <title>ËÆ∞ÂΩï‰∏ÄÊ¨°curlÁöÑÊä•Èîô</title>
      <link>https://heyuuuu77.github.io/posts/curl/</link>
      <pubDate>Tue, 03 Jun 2025 14:43:01 +0800</pubDate>
      <guid>https://heyuuuu77.github.io/posts/curl/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$client_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;baidu.api_key&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$client_secret&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;baidu.secret_key&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$token_url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;https://aip.baidubce.com/oauth/2.0/token&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$curl&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;curl_init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;curl_setopt_array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$curl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;CURLOPT_URL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$token_url&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;?client_id=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$client_id&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;amp;client_secret=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$client_secret&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;amp;grant_type=client_credentials&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;CURLOPT_TIMEOUT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;CURLOPT_RETURNTRANSFER&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;CURLOPT_CUSTOMREQUEST&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;CURLOPT_HTTPHEADER&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;Content-Type: application/json&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;Accept: application/json&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;curl_exec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$curl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;curl_close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$curl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nv&#34;&gt;$response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;json_decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;$response ÂßãÁªàËøîÂõû false, curl_error($curl) ÊòæÁ§∫ÁöÑÊòØÁ©∫Â≠óÁ¨¶‰∏≤ &amp;lsquo;&amp;rsquo;, curl_errno($curl) ÊòæÁ§∫ÁöÑ77. Ê≤°ÊúâÂÖ∂‰ªñ‰ªª‰Ωï‰ø°ÊÅØ„ÄÇ curl_getinfo($curl) ÊòæÁ§∫ÁöÑÈÉΩÊòØÊó†Êïà‰ø°ÊÅØ„ÄÇ&lt;/p&gt;
&lt;p&gt;Êü•ËØ¢‰∫ÜÂæàÂ§öÔºåÊúâÁöÑËØ¥ÊòØ sslËØÅ‰π¶ caÊñá‰ª∂ÊçüÂùèÁ≠â„ÄÇ ÊúÄÁªàËß£ÂÜ≥ÊñπÂºèÊòØÈáçÂêØ php-fpm ÊúçÂä°„ÄÇ &lt;code&gt;sudo systemctl restart php-fpm&lt;/code&gt; Â∞±ÂèØ‰ª•‰∫Ü„ÄÇ&lt;/p&gt;</description>
    </item>
    <item>
      <title>Advertiser</title>
      <link>https://heyuuuu77.github.io/posts/advertiser/</link>
      <pubDate>Mon, 14 Apr 2025 09:53:08 +0800</pubDate>
      <guid>https://heyuuuu77.github.io/posts/advertiser/</guid>
      <description>&lt;h4 id=&#34;ÂπøÂëäÁöÑËÆ°Ë¥πÊ®°ÂºèÊúâÂì™Âá†Áßç&#34;&gt;ÂπøÂëäÁöÑËÆ°Ë¥πÊ®°ÂºèÊúâÂì™Âá†Áßç&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;CPM (Cost Per Mile)ÂçÉÊ¨°Â±ïÁ§∫ËÆ°Ë¥π&lt;/li&gt;
&lt;li&gt;CPC (Cost Per Click) ÁÇπÂáªÊî∂Ë¥π&lt;/li&gt;
&lt;li&gt;CPA (Cost Per Action) Ë°åÂä®Êî∂Ë¥π ÂπøÂëä‰∏ªÂú®Áî®Êà∑ÂÆåÊàêÊüê‰∏™ÁâπÂÆöË°å‰∏∫Êâç‰ºöÊîØ‰ªòË¥πÁî®&lt;/li&gt;
&lt;li&gt;CTP (Cost Per Time) ÊåâÊó∂ÈïøÊî∂Ë¥π&lt;/li&gt;
&lt;li&gt;CPI (Cost Per Install) ÊåâÂÆâË£ÖÊî∂Ë¥πÁ≠â&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;Áé∞‰ª£ÂπøÂëäÁ≥ªÁªüÊû∂ÊûÑ&#34;&gt;Áé∞‰ª£ÂπøÂëäÁ≥ªÁªüÊû∂ÊûÑ&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ÂπøÂëäÊäïÊîæÂπ≥Âè∞ÔºàDSP, Demand-Side PlatformÔºâ ÂπøÂëä‰∏ªÈÄöËøáDSPËøõË°åÊäïÊîæÔºåDSPË¥üË¥£Á´û‰ª∑ÔºåÂÆöÂêëÔºå‰ºòÂåñÁ≠âÂäüËÉΩ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;‰æõÂ∫îÊñπÂπ≥Âè∞ÔºàSSP, Supply-Side PlatformÔºâ Â™í‰ΩìÊñπÈÄöËøáSSPÁÆ°ÁêÜÂπøÂëäÂ∫ìÂ≠òÔºåÂπøÂëäÂ∫ìÂ≠òÂ∞±ÊòØÂπøÂëä‰Ωç„ÄÇÂ¶ÇÊûúËá™Â∑±ÂºÄÂèë‰∏Ä‰∏™appÔºåÊÉ≥Êé•ÂπøÂëä„ÄÇ‰∏çÈúÄË¶ÅËá™Â∑±ÊâæÂπøÂëä‰∏ªÔºåÁõ¥Êé•ÊääÂπøÂëä‰ΩçÂçñÁªôSSPÂ∞±Ë°å&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ÂπøÂëä‰∫§ÊòìÂ∏ÇÂú∫(Ad Exchange), ‰∏Ä‰∏™ÂºÄÂèëÁöÑÂπøÂëäÁ´û‰ª∑Âπ≥Âè∞ÔºåÈìæÊé•DSPÂíåSSP„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Êï∞ÊçÆÁÆ°ÁêÜÂπ≥Âè∞(DMP, Data Managerment Platform), Êî∂ÈõÜÔºåÂàÜÊûêÁî®Êà∑Êï∞ÊçÆÔºåÊèêÈ´òÂπøÂëäÂÆöÂêëËÉΩÂäõÁ≠â&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ÂπøÂëäÁõëÊµãÂπ≥Âè∞(Ad Monitor), ÁõëÊµãÂπøÂëäÊäïÊîæÊïàÊûúÔºåÊØîÂ¶ÇÂπøÂëäÊäïÊîæÁöÑÊõùÂÖâÈáèÔºåÁÇπÂáªÈáèÔºåËΩ¨ÂåñÁ≠âÔºåÂΩíÂõ†ÂàÜÊûê„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Tcp_udp</title>
      <link>https://heyuuuu77.github.io/posts/tcp_udp/</link>
      <pubDate>Wed, 26 Mar 2025 17:17:34 +0800</pubDate>
      <guid>https://heyuuuu77.github.io/posts/tcp_udp/</guid>
      <description>&lt;p&gt;TCP/IPÊòØ‰∏Ä‰∏™ÂçèËÆÆÁ∞áÔºåtcpÂçèËÆÆ(‰º†ËæìÊéßÂà∂ÂçèËÆÆ)ÔºåudpÂçèËÆÆ(Áî®Êà∑Êï∞ÊçÆÂçèËÆÆ)ÈÉΩÂåÖÂê´Âú®ÂÖ∂‰∏≠ÔºåËøòÊúâhttp(Ë∂ÖÊñáÊú¨‰º†ËæìÂçèËÆÆ), ftp(ÊñáÊú¨‰º†ËæìÂçèËÆÆ), telnet(ËøúÁ®ãÁôªÂΩïÂçèËÆÆ)Á≠â&lt;/p&gt;
&lt;p&gt;ÂÖàËØ¥‰∏Ä‰∏ãTCP/IPÂçèËÆÆÁöÑ4Â±ÇÂçèËÆÆÊ®°ÂûãÔºåËá≥‰∏äÂêë‰∏ã‰æùÊ¨°ÊòØÔºöÂ∫îÁî®Â±Ç,‰º†ËæìÂ±ÇÔºåÁΩëÁªúÂ±ÇÔºåÁΩëÁªúÊé•Âè£Â±Ç„ÄÇ
Êâ©Â±ïÊàê OSIÂçèËÆÆÁöÑ7Â±ÇÂçèËÆÆÊ®°ÂûãÔºåÊòØÊää Â∫îÁî®Â±ÇÊãÜÂàÜÊàêÂ∫îÁî®Â±ÇÔºå‰ºöËØùÂ±ÇÔºåË°®Á§∫Â±Ç„ÄÇ ÁΩëÁªúÊé•Âè£Â±ÇÊãÜÂàÜ‰∏∫ Êï∞ÊçÆÈìæË∑ØÂ±ÇÔºåÁâ©ÁêÜÂ±Ç&lt;/p&gt;
&lt;p&gt;tcpÂçèËÆÆÂèØ‰ª•ÁêÜËß£ÊàêÂèØÈù†Êï∞ÊçÆ‰º†ËæìÂçèËÆÆÔºåÈù¢ÂêëËøûÊé•ÁöÑÂçèËÆÆ„ÄÇ Âª∫Á´ãtcpËøûÊé•ÈúÄË¶Å3Ê¨°Êè°ÊâãÔºåÊñ≠ÂºÄÈúÄË¶Å4Ê¨°Êå•Êâã„ÄÇ
udp‰∏çÈúÄË¶ÅÊèêÂâçÂª∫Á´ãËøûÊé•ÔºåÊòØÈù¢ÂêëÊó†ËøûÊé•ÁöÑÂçèËÆÆÔºåÂè™È°æÂæÄÁΩëÁªú‰∏ä‰º†ËæìÔºåÊé•Êî∂Á´ØËá™Â∑±‰ªéÊ∂àÊÅØÈòüÂàó‰∏≠Ëé∑ÂèñÔºåÂè™ÊòØÂ∞ΩÂèØËÉΩÂèëÈÄÅ„ÄÇ&lt;/p&gt;</description>
    </item>
    <item>
      <title>PythonÁâàÊú¨ÊéßÂà∂Â∑•ÂÖ∑ UV</title>
      <link>https://heyuuuu77.github.io/posts/python_uv/</link>
      <pubDate>Mon, 24 Mar 2025 11:43:50 +0800</pubDate>
      <guid>https://heyuuuu77.github.io/posts/python_uv/</guid>
      <description>&lt;h2 id=&#34;uv&#34;&gt;UV&lt;/h2&gt;
&lt;p&gt;ÂÆòÁΩë&lt;a href=&#34;https://docs.astral.sh/uv/&#34;&gt;Âú∞ÂùÄ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;‰∏Ä‰∏™ÂæàÂ•ΩÁî®ÁöÑpythonÈ°πÁõÆÁÆ°ÁêÜÂ∑•ÂÖ∑Ôºå‰ª•‰∏ãÊòØ‰∏Ä‰∫õÂ∏∏ËßÅÂëΩ‰ª§Ôºö&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;uv init [example]  ÂèØ‰ª•ÂàùÂßãÂåñÈ°πÁõÆ,‰ºöËá™Âä®ÂàõÂª∫example floder&lt;/li&gt;
&lt;li&gt;uv install python [version] ÂèØ‰ª•ÂÆâË£ÖpythonÁâàÊú¨„ÄÇ&lt;/li&gt;
&lt;li&gt;uv install Âç≥ÂèØÊ†πÊçÆ uv.lock Êñá‰ª∂ÂÆâË£Ö‰æùËµñ&lt;/li&gt;
&lt;li&gt;uv python list ÊòæÁ§∫ python ÁâàÊú¨&lt;/li&gt;
&lt;li&gt;uv venv &amp;ndash;python 3.12.0  ÂèØ‰ª•ÂàõÂª∫pythonÁöÑËôöÊãüÁéØÂ¢É&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>ClickhouseÊÄßËÉΩ‰πãÂ∑Ö</title>
      <link>https://heyuuuu77.github.io/posts/clickhouse%E6%80%A7%E8%83%BD%E4%B9%8B%E5%B7%85/</link>
      <pubDate>Mon, 24 Mar 2025 09:34:08 +0800</pubDate>
      <guid>https://heyuuuu77.github.io/posts/clickhouse%E6%80%A7%E8%83%BD%E4%B9%8B%E5%B7%85/</guid>
      <description>&lt;h3 id=&#34;day1&#34;&gt;Day1&lt;/h3&gt;
&lt;h4 id=&#34;oltp--olap&#34;&gt;OLTP &amp;amp; OLAP&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;OLTP, OnLine Transaction Process ËÅîÊú∫‰∫ãÂä°Â§ÑÁêÜ (MySQL, PostgreSQL, Oracle)
OLTP‰ΩøÁî®ÁöÑÊòØÈ´òÂèçÂºèÁöÑË°®„ÄÇÂ•ΩÂ§ÑÊòØÊï∞ÊçÆÁªìÊûÑ‰∏çÂÆπÊòìÔºå‰∫ãÂä°Â§ÑÁêÜÈÄüÂ∫¶Âø´&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OLAP, OnLine Analyse Process ËÅîÊú∫ÂàÜÊûêÂ§ÑÁêÜ(Hive, HBase, ClickHouse)
OLAPÊï∞ÊçÆÂ∫ìË¢´Áß∞‰∏∫Êï∞ÊçÆ‰ªìÂ∫ì(Êï∞‰ªì), ÂÆÉÊòØÂèçËåÉÂºèÁöÑ„ÄÇÊï∞ÊçÆÂÜó‰ΩôÂ∫¶ÂæàÈ´òÔºåÊ≠£Âõ†‰∏∫Â¶ÇÊ≠§„ÄÇÂÆÉË¢´Áî®ÂÅöÊï∞ÊçÆÂàÜÊûêÔºåÂõ†‰∏∫Âçï‰∏™ÂÆΩË°®Â∞±ÂåÖÂê´‰∫ÜÂæàÂ§öÂ≠óÊÆµÔºå‰∏çÈúÄË¶ÅËøõË°åËøûË°®(JOIN)Êü•ËØ¢„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;Á¨¨Èõ∂ËåÉÂºè&#34;&gt;Á¨¨Èõ∂ËåÉÂºè&lt;/h4&gt;
&lt;p&gt;‰∏çÈÅµÂæ™Á¨¨‰∏ÄËåÉÂºèÔºåÈÉΩË¢´Áß∞‰πã‰∏∫Á¨¨Èõ∂ËåÉÂºèÔºåÂç≥Â≠óÊÆµ‰∏≠ÂèØ‰ª•Â≠òÂÇ®jsonÊàñËÄÖÊñáÊ°£&lt;/p&gt;
&lt;h4 id=&#34;Á¨¨‰∏ÄËåÉÂºè&#34;&gt;Á¨¨‰∏ÄËåÉÂºè&lt;/h4&gt;
&lt;p&gt;ÊåáÊï∞ÊçÆË°®‰∏≠ÁöÑÊØè‰∏™Â±ûÊÄßÈÉΩ‰∏çÂèØÂÜçÊãÜÂàÜ„ÄÇ&lt;/p&gt;
&lt;h3 id=&#34;day2&#34;&gt;Day2&lt;/h3&gt;</description>
    </item>
    <item>
      <title>Leecode</title>
      <link>https://heyuuuu77.github.io/posts/leecode/</link>
      <pubDate>Tue, 18 Mar 2025 09:46:23 +0800</pubDate>
      <guid>https://heyuuuu77.github.io/posts/leecode/</guid>
      <description>&lt;h3 id=&#34;Â∞èÈïáÊ≥ïÂÆò&#34;&gt;Â∞èÈïáÊ≥ïÂÆò&lt;/h3&gt;
&lt;h5 id=&#34;È¢òÂπ≤&#34;&gt;È¢òÂπ≤&lt;/h5&gt;
&lt;p&gt;Â∞èÈïáÊúâ n ‰∏™‰∫∫Ôºå ÂÖ∂‰∏≠Êúâ‰∏Ä‰∏™‰∫∫ÊòØÊòØÂ∞èÈïáÊ≥ïÂÆò„ÄÇÂ¶ÇÊûúÊ≥ïÂÆòÂ≠òÂú®ÔºåÈÇ£‰πàÔºö&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;‰ªñ‰∏ç‰ø°‰ªª‰ªª‰Ωï‰∫∫&lt;/li&gt;
&lt;li&gt;ÊØè‰∏™‰∫∫ÔºàÈô§‰∫Ü‰ªñËá™Â∑±ÔºâÈÉΩ‰ø°‰ªª‰ªñ&lt;/li&gt;
&lt;li&gt;ÂêåÊó∂Êª°Ë∂≥ 1 Âíå 2&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ÁªôÂÆö‰∏Ä‰∏™trustÊï∞ÁªÑ„ÄÇÂÖ∂‰∏≠ trust[i] = [ai, bi] Ë°®Á§∫ÁºñÂè∑‰∏∫ ai ÁöÑ‰∫∫‰ø°‰ªªÁºñÂè∑‰∏∫ bi ÁöÑ‰∫∫
Â¶ÇÊûúÂ∞èÈïáÊ≥ïÂÆòÂ≠òÂú®Âπ∂Á°ÆËÆ§Ë∫´‰ªΩÔºåËøîÂõûÊ≥ïÂÆòÁºñÂè∑ÔºåÂê¶ÂàôËøîÂõû -1&lt;/p&gt;
&lt;h5 id=&#34;È¢òËß£ÊÄùË∑Ø&#34;&gt;È¢òËß£ÊÄùË∑Ø&lt;/h5&gt;
&lt;p&gt;Â¶ÇÊûú‰ΩøÁî®ÂõæËß£ÁöÑÊÄùË∑ØÂ∞±ÂæàÂ•ΩÊé•Ëøô‰∏™È¢òÁõÆ
&lt;img alt=&#34;Â∞èÈïáÊ≥ïÂÆò&#34; loading=&#34;lazy&#34; src=&#34;https://heyuuuu77.github.io/images/judge.jpg&#34;&gt;
ÂºïÂÖ•‰∏§‰∏™Ê¶ÇÂøµÂ∞±ËÉΩÂæàÂ•ΩÁöÑÊäΩË±°Ëøô‰∏™È¢òÔºåÂØπ‰∫éÂ∞èÈïáÁöÑÊüê‰∏™‰∫∫ËÄåË®ÄÔºåÂà´‰∫∫‰ø°‰ªªÊàëÔºåË°®Á§∫ÂÖ•Â∫¶ÔºåÊàë‰ø°‰ªªÂà´‰∫∫Ë°®Á§∫Âá∫Â∫¶„ÄÇ Âõ†Ê≠§ÔºåÂØªÊâæÂ∞èÈïáÊ≥ïÂÆòÁöÑÈ¢òÁõÆÂèØ‰ª•ÊäΩË±°ÊàêÔºå Ê≥ïÂÆòÁöÑÂÖ•Â∫¶ÊòØ n-1ÔºåÊ≥ïÂÆòÁöÑÂá∫Â∫¶ÊòØ0.&lt;/p&gt;
&lt;h5 id=&#34;code&#34;&gt;code&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python3&#34; data-lang=&#34;python3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;collections&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Counter&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;findJudge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trust&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;outDegree&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Counter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trust&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;inDegree&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Counter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trust&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;outDegree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inDegree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;1348Êé®ÊñáËÆ°Êï∞&#34;&gt;1348.Êé®ÊñáËÆ°Êï∞&lt;/h4&gt;
&lt;h5 id=&#34;È¢òÁõÆ&#34;&gt;È¢òÁõÆ&lt;/h5&gt;
&lt;p&gt;‰∏ÄÂÆ∂Á§æ‰∫§Â™í‰ΩìÂÖ¨Âè∏Ê≠£ËØïÂõæÈÄöËøáÂàÜÊûêÁâπÂÆöÊó∂Èó¥ÊÆµÂÜÖÂá∫Áé∞ÁöÑÊé®ÊñáÊï∞ÈáèÊù•ÁõëÊéßÂÖ∂ÁΩëÁ´ô‰∏äÁöÑÊ¥ªÂä®„ÄÇËøô‰∫õÊó∂Èó¥ÊÆµÂèØ‰ª•Ê†πÊçÆÁâπÂÆöÁöÑÈ¢ëÁéáÔºà ÊØèÂàÜÈíü „ÄÅÊØèÂ∞èÊó∂ Êàñ ÊØè‰∏ÄÂ§© ÔºâÂàíÂàÜ‰∏∫Êõ¥Â∞èÁöÑ Êó∂Èó¥ÊÆµ „ÄÇ&lt;/p&gt;
&lt;p&gt;‰æãÂ¶ÇÔºåÂë®Êúü [10,10000] Ôºà‰ª• Áßí ‰∏∫Âçï‰ΩçÔºâÂ∞ÜË¢´ÂàíÂàÜ‰∏∫‰ª•‰∏ãÈ¢ëÁéáÁöÑ Êó∂Èó¥Âùó :&lt;/p&gt;
&lt;p&gt;ÊØè ÂàÜÈíü (60Áßí Âùó)Ôºö [10,69], [70,129], [130,189], &amp;hellip;, [9970,10000]
ÊØè Â∞èÊó∂ (3600Áßí Âùó)Ôºö[10,3609], [3610,7209], [7210,10000]
ÊØè Â§© (86400Áßí Âùó)Ôºö [10,10000]
Ê≥®ÊÑèÔºåÊúÄÂêé‰∏Ä‰∏™ÂùóÂèØËÉΩÊØîÊåáÂÆöÈ¢ëÁéáÁöÑÂùóÂ§ßÂ∞èÊõ¥Áü≠ÔºåÂπ∂‰∏îÊÄªÊòØ‰ª•Êó∂Èó¥ÊÆµÁöÑÁªìÊùüÊó∂Èó¥ÁªìÊùü(Âú®‰∏äÈù¢ÁöÑÁ§∫‰æã‰∏≠‰∏∫ 10000 )„ÄÇ&lt;/p&gt;</description>
    </item>
    <item>
      <title>ÂàÜÂ∏ÉÂºèÁ≥ªÁªü</title>
      <link>https://heyuuuu77.github.io/posts/distributed_system/</link>
      <pubDate>Fri, 21 Feb 2025 08:46:57 +0800</pubDate>
      <guid>https://heyuuuu77.github.io/posts/distributed_system/</guid>
      <description>&lt;h3 id=&#34;ÂêçËØçËß£Èáä&#34;&gt;ÂêçËØçËß£Èáä&lt;/h3&gt;
&lt;h4 id=&#34;capÁêÜËÆ∫&#34;&gt;CAPÁêÜËÆ∫&lt;/h4&gt;
&lt;p&gt;ËØ•ÁêÜËÆ∫ÊåáÂá∫Ôºå‰∏Ä‰∏™ÂàÜÂ∏ÉÂºèÁ≥ªÁªü‰∏çÂèØËÉΩÂêåÊó∂Êª°Ë∂≥‰∏Ä‰∏ã‰∏â‰∏™ÁâπÊÄß:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;‰∏ÄËá¥ÊÄß(Consistency): ÊâÄÊúâËäÇÁÇπÂêå‰∏ÄÊó∂Èó¥ÁúãÂà∞ÁöÑÊï∞ÊçÆÊòØÁõ∏ÂêåÁöÑ„ÄÇ‰πüÂ∞±ÊòØËØ¥ÔºåÂΩì‰∏Ä‰∏™Êï∞ÊçÆÊõ¥Êñ∞Êìç‰ΩúÂú®Á≥ªÁªüÁöÑÊüê‰∏™ËäÇÁÇπ‰∏äÊâßË°åÊàêÂäüÂêéÔºåÂú®ÂêéÁª≠ÁöÑ‰ªª‰ΩïËäÇÁÇπ‰∏äËøõË°åÊï∞ÊçÆËØªÂèñÊìç‰ΩúÊó∂ÔºåÈÉΩËÉΩËé∑ÂèñÂà∞Êõ¥Êñ∞ÂêéÁöÑÂÄº„ÄÇ&lt;/li&gt;
&lt;li&gt;ÂèØÁî®ÊÄß(Availability): Á≥ªÁªü‰∏≠ÁöÑÊØè‰∏Ä‰∏™ÈùûÊïÖÈöúËäÇÁÇπÈÉΩËÉΩÂú®ÂêàÁêÜÁöÑÊó∂Èó¥ÂÜÖÂìçÂ∫îÂÆ¢Êà∑Á´ØÁöÑËØ∑Ê±Ç„ÄÇÂç≥Êó†ËÆ∫‰ΩïÊó∂ÔºåÂÆ¢Êà∑Á´ØÂèëËµ∑ÁöÑËØ∑Ê±ÇÈÉΩËÉΩÂæóÂà∞ÂìçÂ∫îÔºå‰∏ç‰ºöÂá∫Áé∞Á≥ªÁªü‰∏çÂèØÁî®ÁöÑÊÉÖÂÜµ„ÄÇ&lt;/li&gt;
&lt;li&gt;ÂàÜÂå∫ÂÆπÈîôÊÄß(Partition tolerance): Á≥ªÁªüÂú®ÈÅáÂà∞‰ªª‰ΩïÁΩëÁªúÂàÜÂå∫ÊïÖÈöúÊó∂Ôºå‰ªçÁÑ∂ËÉΩÂ§ü‰øùËØÅÂØπÂ§ñÊèê‰æõÊª°Ë∂≥‰∏ÄËá¥ÊÄßÊàñÂèØÁî®ÊÄßÁöÑÊúçÂä°„ÄÇÁΩëÁªúÂàÜÂå∫ÊòØÊåáÁî±‰∫éÁΩëÁªúÈóÆÈ¢òÂØºËá¥ÈÉ®ÂàÜËäÇÁÇπ‰πãÈó¥Êó†Ê≥ïÈÄö‰ø°„ÄÇ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;ÁêÜËß£&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Âú®ÂàÜÂ∏ÉÂºèÁ≥ªÁªü‰∏≠ÔºåÁî±‰∫éÁΩëÁªúÁöÑ‰∏çÁ°ÆÂÆöÊÄßÔºåÂàÜÂå∫ÂÆπÈîôÊÄßÊòØÂøÖÈ°ªË¶ÅËÄÉËôëÁöÑÂõ†Á¥†Ôºå‰πüÂ∞±ÊòØ P ÊòØÂøÖÁÑ∂Â≠òÂú®ÁöÑ„ÄÇÂõ†Ê≠§ÔºåÂú®ÂÆûÈôÖÂ∫îÁî®‰∏≠ÔºåÈÄöÂ∏∏ÈúÄË¶ÅÂú®‰∏ÄËá¥ÊÄßÔºàCÔºâÂíåÂèØÁî®ÊÄßÔºàAÔºâ‰πãÈó¥ÂÅöÂá∫ÊùÉË°°&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;CP Á≥ªÁªü&lt;/em&gt;Ôºö‰ºòÂÖà‰øùËØÅ‰∏ÄËá¥ÊÄßÂíåÂàÜÂå∫ÂÆπÈîôÊÄßÔºåÁâ∫Áâ≤ÈÉ®ÂàÜÂèØÁî®ÊÄß„ÄÇ‰æãÂ¶ÇÔºåZooKeeper Â∞±ÊòØ‰∏Ä‰∏™ÂÖ∏ÂûãÁöÑ CP Á≥ªÁªüÔºåÂΩìÂèëÁîüÁΩëÁªúÂàÜÂå∫Êó∂Ôºå‰∏∫‰∫Ü‰øùËØÅÊï∞ÊçÆÁöÑ‰∏ÄËá¥ÊÄßÔºåÁ≥ªÁªüÂèØËÉΩ‰ºöÊöÇÊó∂‰∏çÂèØÁî®ÔºåÁõ¥Âà∞ÂàÜÂå∫ÈóÆÈ¢òËß£ÂÜ≥„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;AP Á≥ªÁªü&lt;/em&gt;Ôºö‰ºòÂÖà‰øùËØÅÂèØÁî®ÊÄßÂíåÂàÜÂå∫ÂÆπÈîôÊÄßÔºåÁâ∫Áâ≤ÈÉ®ÂàÜ‰∏ÄËá¥ÊÄß„ÄÇÊØîÂ¶ÇÔºåAmazon ÁöÑ Dynamo Á≥ªÁªüÔºåÂÆÉÂÖÅËÆ∏Âú®‰∏çÂêåËäÇÁÇπ‰∏äÁöÑÊï∞ÊçÆÂ≠òÂú®Áü≠ÊöÇÁöÑ‰∏ç‰∏ÄËá¥Ôºå‰ΩÜ‰øùËØÅÁ≥ªÁªüÂßãÁªàÂèØ‰ª•ÂìçÂ∫îÂÆ¢Êà∑Á´ØÁöÑËØ∑Ê±Ç„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;baseÁêÜËÆ∫&#34;&gt;BASEÁêÜËÆ∫&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;ÂÆö‰πâ&lt;/em&gt;
ÊòØÂØπ CAP ÁêÜËÆ∫‰∏≠ AP ÊñπÊ°àÁöÑ‰∏Ä‰∏™Êâ©Â±ïÂíåÂª∂‰º∏ÔºåÂÆÉÁöÑÊ†∏ÂøÉÊÄùÊÉ≥ÊòØÂç≥‰ΩøÊó†Ê≥ïÂÅöÂà∞Âº∫‰∏ÄËá¥ÊÄßÔºå‰ΩÜÊØè‰∏™Â∫îÁî®ÈÉΩÂèØ‰ª•Ê†πÊçÆËá™Ë∫´ÁöÑ‰∏öÂä°ÁâπÁÇπÔºåÈááÁî®ÈÄÇÂΩìÁöÑÊñπÂºèÊù•‰ΩøÁ≥ªÁªüËææÂà∞ÊúÄÁªà‰∏ÄËá¥ÊÄß„ÄÇBASE ÊòØ‰∏â‰∏™Áü≠ËØ≠ÁöÑÁº©ÂÜôÔºö&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Âü∫Êú¨ÂèØÁî®ÔºàBasically AvailableÔºâÔºöÊåáÂàÜÂ∏ÉÂºèÁ≥ªÁªüÂú®Âá∫Áé∞ÊïÖÈöúÊó∂ÔºåÂÖÅËÆ∏ÊçüÂ§±ÈÉ®ÂàÜÂèØÁî®ÊÄßÔºåÂç≥‰øùËØÅÊ†∏ÂøÉÂäüËÉΩÂèØÁî®Ôºå‰ΩÜÂèØËÉΩ‰ºöÂá∫Áé∞ÂìçÂ∫îÊó∂Èó¥Âª∂Èïø„ÄÅÊúçÂä°ÈôçÁ∫ßÁ≠âÊÉÖÂÜµ„ÄÇ‰æãÂ¶ÇÔºåÂú®ÁîµÂïÜÂ§ß‰øÉÊúüÈó¥ÔºåÁ≥ªÁªüÂèØËÉΩ‰ºöÂØπ‰∏Ä‰∫õÈùûÊ†∏ÂøÉ‰∏öÂä°ÂäüËÉΩËøõË°åÈôêÊµÅÔºå‰ª•‰øùËØÅÊ†∏ÂøÉÁöÑ‰∫§ÊòìÂäüËÉΩÊ≠£Â∏∏ËøêË°å„ÄÇ&lt;/li&gt;
&lt;li&gt;ËΩØÁä∂ÊÄÅÔºàSoft stateÔºâÔºöÂÖÅËÆ∏Á≥ªÁªü‰∏≠ÁöÑÊï∞ÊçÆÂ≠òÂú®‰∏≠Èó¥Áä∂ÊÄÅÔºåÂπ∂‰∏îËøôÁßç‰∏≠Èó¥Áä∂ÊÄÅ‰∏ç‰ºöÂΩ±ÂìçÁ≥ªÁªüÁöÑÊï¥‰ΩìÂèØÁî®ÊÄß„ÄÇ‰πüÂ∞±ÊòØËØ¥ÔºåÁ≥ªÁªü‰∏≠ÁöÑÊï∞ÊçÆÂèØ‰ª•Âú®‰∏ÄÊÆµÊó∂Èó¥ÂÜÖÂ§Ñ‰∫é‰∏ç‰∏ÄËá¥ÁöÑÁä∂ÊÄÅ„ÄÇ&lt;/li&gt;
&lt;li&gt;ÊúÄÁªà‰∏ÄËá¥ÊÄßÔºàEventual consistencyÔºâÔºöÁ≥ªÁªü‰∏≠ÁöÑÊâÄÊúâÊï∞ÊçÆÂâØÊú¨ÔºåÂú®ÁªèËøá‰∏ÄÊÆµÊó∂Èó¥ÁöÑÂêåÊ≠•ÂêéÔºåÊúÄÁªàËÉΩÂ§üËææÂà∞‰∏ÄËá¥ÁöÑÁä∂ÊÄÅ„ÄÇÊúÄÁªà‰∏ÄËá¥ÊÄßÊòØ BASE ÁêÜËÆ∫ÁöÑÊ†∏ÂøÉÔºåÂÆÉÂº∫Ë∞ÉÁöÑÊòØÊï∞ÊçÆÂú®‰∏ÄÊÆµÊó∂Èó¥Âêé‰ºöËææÂà∞‰∏ÄËá¥ÔºåËÄå‰∏çÊòØÂÆûÊó∂‰∏ÄËá¥„ÄÇ&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ÂàÜÂ∏ÉÂºèÊ°ÜÊû∂&#34;&gt;ÂàÜÂ∏ÉÂºèÊ°ÜÊû∂&lt;/h3&gt;
&lt;h4 id=&#34;spring-cloud&#34;&gt;Spring Cloud&lt;/h4&gt;
&lt;h4 id=&#34;dubbo&#34;&gt;Dubbo&lt;/h4&gt;
&lt;h4 id=&#34;grpc&#34;&gt;gRPC&lt;/h4&gt;
&lt;p&gt;È´òÊÄßËÉΩËøúÁ®ãËøáÁ®ãË∞ÉÁî®Ê°ÜÊû∂„ÄÇÊµÅÂºè‰º†ËæìÔºåÊîØÊåÅÂõõÁßçÊµÅÂºè‰º†ËæìÊ®°ÂºèÔºöÂÆ¢Êà∑Á´ØÊµÅÂºèÔºåÊúçÂä°Âô®ÊµÅÂºèÔºåÂèåÂêëÊµÅÂ§±ÔºåRPCÈùûÊµÅÂºè„ÄÇ
protobuf Â∫èÂàóÂåñÂçèËÆÆÔºåË∑®ËØ≠Ë®ÄÔºåProtobuf ÁºñËØëÂô®ÂèØ‰ª•Ê†πÊçÆÂÆö‰πâÊñá‰ª∂Ëá™Âä®ÁîüÊàê‰∏çÂêåËØ≠Ë®ÄÁöÑÂÆ¢Êà∑Á´ØÂíåÊúçÂä°Âô®‰ª£Á†ÅÔºåÂáèÂ∞ë‰∫ÜÊâãÂä®ÁºñÂÜô‰ª£Á†ÅÁöÑÂ∑•‰ΩúÈáè„ÄÇ&lt;/p&gt;
&lt;h4 id=&#34;etcd&#34;&gt;etcd&lt;/h4&gt;
&lt;p&gt;È´òÂèØÁî®ÁöÑÂàÜÂ∏ÉÂºèÈîÆÂÄºÂ≠òÂÇ®Á≥ªÁªüÔºåÂèØÁî®‰∫éÈÖçÁΩÆÂÖ±‰∫´ÂíåÊúçÂä°ÂèëÁé∞&lt;/p&gt;
&lt;h4 id=&#34;Â¶Ç‰ΩïÊê≠Âª∫‰∏Ä‰∏™ÊîØÊåÅÈ´òÂπ∂ÂèëÁöÑÁ≥ªÁªü&#34;&gt;Â¶Ç‰ΩïÊê≠Âª∫‰∏Ä‰∏™ÊîØÊåÅÈ´òÂπ∂ÂèëÁöÑÁ≥ªÁªü&lt;/h4&gt;
&lt;p&gt;È¶ñÂÖà‰ªéÂ§öÊñπÈù¢ÂéªËÄÉËôëÔºå&lt;/p&gt;
&lt;h5 id=&#34;ÂàÜÂ∏ÉÂºèÈÄâÂûã&#34;&gt;ÂàÜÂ∏ÉÂºèÈÄâÂûã&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Ê®™ÂêëÊâ©Â±ï: K8SÈÉ®ÁΩ≤Â§ö‰∏™ÊúçÂä°Á§∫‰æãÔºåNginxË¥üËΩΩÂùáË°°ÔºåK8S HPAÂèØ‰ª•Ëá™Âä®ÂºπÊÄßÊâ©Áº©ÂÆπ„ÄÇ&lt;/li&gt;
&lt;li&gt;ÊúçÂä°ÊãÜÂàÜ: ÂæÆÊúçÂä°ÊãÜÂàÜ&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;‰∏ªÊµÅÁöÑrpcÊ°ÜÊû∂&#34;&gt;‰∏ªÊµÅÁöÑRPCÊ°ÜÊû∂&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Apache Dubbo
ÈòøÈáåÂºÄÊ∫ê&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;gRPC
google ÂºÄÊ∫ê„ÄÇ protobufÊîØÊåÅ&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;ÂàÜÂ∏ÉÂºèËÆ°ÁÆóÊ°ÜÊû∂&#34;&gt;ÂàÜÂ∏ÉÂºèËÆ°ÁÆóÊ°ÜÊû∂&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hadoop MapReduce
Êó•ÂøóÂàÜÊûê„ÄÅETLÁ≠âÁ¶ªÁ∫ø‰ªªÂä°„ÄÇ&lt;/p&gt;</description>
    </item>
    <item>
      <title>ËÆæËÆ°Ê®°Âºè‰πãÁæé</title>
      <link>https://heyuuuu77.github.io/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/</link>
      <pubDate>Fri, 14 Feb 2025 09:32:22 +0800</pubDate>
      <guid>https://heyuuuu77.github.io/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%BE%8E/</guid>
      <description>&lt;h4 id=&#34;Èù¢ÂêëÂØπË±°&#34;&gt;Èù¢ÂêëÂØπË±°&lt;/h4&gt;
&lt;p&gt;Èù¢ÂêëÂØπË±°ÁºñÁ®ãÊòØÂõ†‰∏∫ÂÖ∂ÂÖ∑Êúâ‰∏∞ÂØåÁöÑÁâπÊÄß(Â∞ÅË£ÖÔºåÊäΩË±°ÔºåÁªßÊâøÔºåÂ§öÊÄÅ)ÔºåÂèØ‰ª•ÂÆûÁé∞ÂæàÂ§öÂ§çÊùÇÁöÑËÆæËÆ°ÊÄùË∑Ø„ÄÇ&lt;/p&gt;
&lt;h4 id=&#34;ËÆæËÆ°ÂéüÂàô&#34;&gt;ËÆæËÆ°ÂéüÂàô&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;SOLIDÂéüÂàô - SRP Âçï‰∏ÄËÅåË¥£ÂéüÂàô&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SOLIDÂéüÂàô - OCP ÂºÄÈó≠ÂéüÂàô(ÂØπÊâ©Â±ïÂºÄÊîæÔºåÂØπ‰øÆÊîπÂÖ≥Èó≠)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SOLIDÂéüÂàô - LSP ÈáåÂºèÊõøÊç¢ÂéüÂàô: &lt;br&gt;
&lt;strong&gt;Ëß£ÈáäÔºö&lt;/strong&gt; ÊâÄÊúâÂºïÁî®Âü∫Á±ªÁöÑÂú∞ÊñπÂøÖÈ°ªËÉΩÈÄèÊòéÂú∞‰ΩøÁî®ÂÖ∂Â≠êÁ±ªÁöÑÂØπË±°Ôºå‰πüÂ∞±ÊòØËØ¥ÔºåÂ≠êÁ±ªÂØπË±°ÂèØ‰ª•ÊõøÊç¢ÊéâÂÆÉ‰ª¨ÁöÑÂü∫Á±ªÂØπË±°ÔºåËÄåÁ®ãÂ∫èÁöÑË°å‰∏∫‰∏ç‰ºöÂèëÁîüÊîπÂèò„ÄÇ&lt;br&gt;
&lt;strong&gt;Á§∫‰æãÔºö&lt;/strong&gt; Âú®‰∏Ä‰∏™Ê∏∏Êàè‰∏≠Êúâ‰∏Ä‰∏™Âä®Áâ©Á±ªÔºåÈ∏üÁ±ªÁªßÊâøËá™Âä®Áâ©Á±ª„ÄÇÂ¶ÇÊûúÂú®Ê∏∏Êàè‰∏≠ÈúÄË¶Å‰ΩøÁî®Âä®Áâ©Á±ªÁöÑÊüê‰∏™ÊñπÊ≥ïÔºåÈÇ£‰πà‰ΩøÁî®È∏üÁ±ªÂØπË±°Êù•Ë∞ÉÁî®Ëøô‰∏™ÊñπÊ≥ï‰πüÂ∫îËØ•ËÉΩÊ≠£Â∏∏Â∑•‰ΩúÔºåÂπ∂‰∏î‰∏ç‰ºöÂá∫Áé∞ÊÑèÂ§ñÁöÑÁªìÊûú„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SOLIDÂéüÂàô - ISP Êé•Âè£ÈöîÁ¶ªÂéüÂàô &lt;br&gt;
&lt;strong&gt;Ëß£ÈáäÔºö&lt;/strong&gt; ÂÆ¢Êà∑Á´Ø‰∏çÂ∫îËØ•‰æùËµñÂÆÉ‰∏çÈúÄË¶ÅÁöÑÊé•Âè£ÔºåÂç≥‰∏Ä‰∏™Êé•Âè£Â∫îËØ•Âè™ÂåÖÂê´ÂÆ¢Êà∑Á´ØÁúüÊ≠£ÈúÄË¶ÅÁöÑÊñπÊ≥ïÔºåËÄå‰∏çÂ∫îËØ•ÂåÖÂê´‰∏Ä‰∫õÊó†ÂÖ≥ÁöÑÊñπÊ≥ï„ÄÇ&lt;br&gt;
&lt;strong&gt;Á§∫‰æãÔºö&lt;/strong&gt; Âú®‰∏Ä‰∏™Ê∏∏ÊàèÂºÄÂèë‰∏≠ÔºåÊúâ‰∏Ä‰∏™Ê∏∏ÊàèÊéßÂà∂Âô®Êé•Âè£ÔºåÂÖ∂‰∏≠Âè™Â∫îËØ•ÂåÖÂê´‰∏éÊ∏∏ÊàèÊéßÂà∂Áõ∏ÂÖ≥ÁöÑÊñπÊ≥ïÔºåÂ¶ÇÂºÄÂßãÊ∏∏Êàè„ÄÅÊöÇÂÅúÊ∏∏ÊàèÁ≠âÔºåËÄå‰∏çÂ∫îËØ•ÂåÖÂê´‰∏éÊ∏∏ÊàèÁîªÈù¢Ê∏≤ÊüìÁ≠âÊó†ÂÖ≥ÁöÑÊñπÊ≥ï„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SOLIDÂéüÂàô - DIP ‰æùËµñÂÄíÁΩÆÂéüÂàô &lt;br&gt;
&lt;strong&gt;Ëß£ÈáäÔºö&lt;/strong&gt; È´òÂ±ÇÊ®°Âùó‰∏çÂ∫îËØ•‰æùËµñ‰ΩéÂ±ÇÊ®°ÂùóÔºå‰∏§ËÄÖÈÉΩÂ∫îËØ•‰æùËµñÂÖ∂ÊäΩË±°ÔºõÊäΩË±°‰∏çÂ∫îËØ•‰æùËµñÁªÜËäÇÔºåÁªÜËäÇÂ∫îËØ•‰æùËµñÊäΩË±°„ÄÇÂç≥Ë¶ÅÈíàÂØπÊé•Âè£ÁºñÁ®ãÔºåËÄå‰∏çÊòØÈíàÂØπÂÆûÁé∞ÁºñÁ®ã„ÄÇ&lt;br&gt;
&lt;strong&gt;Á§∫‰æãÔºö&lt;/strong&gt; Âú®‰∏Ä‰∏™Ê∏∏ÊàèÂºÄÂèë‰∏≠ÔºåÊ∏∏ÊàèÁöÑ‰∏öÂä°ÈÄªËæëÊ®°ÂùóÊòØÈ´òÂ±ÇÊ®°ÂùóÔºåÊ∏∏ÊàèÁöÑÂ∫ïÂ±ÇÊ∏≤ÊüìÊ®°ÂùóÊòØ‰ΩéÂ±ÇÊ®°Âùó„ÄÇ‰∏öÂä°ÈÄªËæëÊ®°Âùó‰∏çÂ∫îËØ•Áõ¥Êé•‰æùËµñÂ∫ïÂ±ÇÊ∏≤ÊüìÊ®°ÂùóÁöÑÂÖ∑‰ΩìÂÆûÁé∞ÔºåËÄåÊòØÂ∫îËØ•‰æùËµñ‰∏Ä‰∏™ÊäΩË±°ÁöÑÊ∏≤ÊüìÊé•Âè£ÔºåÂ∫ïÂ±ÇÊ∏≤ÊüìÊ®°ÂùóÂÆûÁé∞Ëøô‰∏™Êé•Âè£„ÄÇËøôÊ†∑ÔºåÂΩìÈúÄË¶ÅÊõ¥Êç¢Â∫ïÂ±ÇÊ∏≤ÊüìÂºïÊìéÊó∂ÔºåÂè™ÈúÄË¶ÅÊõ¥Êç¢ÂÆûÁé∞Ê∏≤ÊüìÊé•Âè£ÁöÑÁ±ªÔºåËÄå‰∏çÈúÄË¶Å‰øÆÊîπ‰∏öÂä°ÈÄªËæëÊ®°ÂùóÁöÑ‰ª£Á†Å„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DRYÂéüÂàô(Don&amp;rsquo;t Repeat Yourself)„ÄÅ KISSÂéüÂàô„ÄÅ YAGNIÂéüÂàô(You Aren&amp;rsquo;t Gonna Need It)„ÄÅ LODÊ≥ïÂàô(Law Of Demete)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;ËÆæËÆ°Ê®°Âºè&#34;&gt;ËÆæËÆ°Ê®°Âºè&lt;/h4&gt;
&lt;p&gt;ÁªèÂÖ∏ÁöÑ23ÁßçËÆæËÆ°Ê®°ÂºèÔºåÂàÜ‰∏∫ÂàõÂª∫ÂûãÔºåÁªìÊûÑÂûãÔºåË°å‰∏∫Âûã„ÄÇ&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;ÂàõÂª∫Âûã: (5)
&lt;strong&gt;Â∏∏Áî®&lt;/strong&gt; Âçï‰æãÊ®°Âºè„ÄÅÂ∑•ÂéÇÊ®°Âºè(Â∑•ÂéÇÊñπÊ≥ïÂíåÊäΩË±°Â∑•ÂéÇ)„ÄÅÂª∫ÈÄ†ËÄÖÊ®°Âºè (4)
&lt;strong&gt;‰∏çÂ∏∏Áî®&lt;/strong&gt; ÂéüÂûãÊ®°Âºè (1)&lt;/p&gt;
&lt;p&gt;ÂàõÂª∫ÂûãÊ®°Âºè‰∏ªË¶ÅËß£ÂÜ≥ÂØπË±°ÁöÑÂàõÂª∫ÈóÆÈ¢òÔºåÂ∞ÅË£ÖÂ§çÊùÇÁöÑÂàõÂª∫ËøáÁ®ãÔºåËß£ÂÅ∂ÂØπË±°ÁöÑÂàõÂª∫‰ª£Á†ÅÂíå‰ΩøÁî®‰ª£Á†Å„ÄÇ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ÁªìÊûÑÂûã: (7)
&lt;strong&gt;Â∏∏Áî®&lt;/strong&gt; ‰ª£ÁêÜÊ®°Âºè„ÄÅ Ê°•Êé•Ê®°Âºè„ÄÅ Ë£ÖÈ•∞ËÄÖÊ®°Âºè„ÄÅÈÄÇÈÖçÂô®Ê®°Âºè (4)
&lt;strong&gt;‰∏çÂ∏∏Áî®&lt;/strong&gt; Èó®Èù¢Ê®°Âºè„ÄÅÁªÑÂêàÊ®°Âºè„ÄÅ‰∫´ÂÖÉÊ®°Âºè (3)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ë°å‰∏∫Âûã: (11)
&lt;strong&gt;Â∏∏Áî®&lt;/strong&gt; ËßÇÂØüËÄÖÊ®°Âºè„ÄÅÊ®°ÁâàÊ®°Âºè„ÄÅÁ≠ñÁï•Ê®°Âºè„ÄÅË¥£‰ªªÈìæÊ®°Âºè„ÄÅËø≠‰ª£Âô®Ê®°Âºè„ÄÅÁä∂ÊÄÅÊ®°Âºè (6)
&lt;strong&gt;‰∏çÂ∏∏Áî®&lt;/strong&gt; ËÆøÈóÆËÄÖÊ®°Âºè„ÄÅÂ§áÂøòÂΩïÊ®°Âºè„ÄÅÂëΩ‰ª§Ê®°Âºè„ÄÅËß£ÈáäÂô®Ê®°Âºè„ÄÅ‰∏≠‰ªãÊ®°Âºè (5)&lt;/p&gt;</description>
    </item>
    <item>
      <title>GoËØ≠Ë®ÄÂÆûÊàòÁ¨îËÆ∞</title>
      <link>https://heyuuuu77.github.io/posts/go/</link>
      <pubDate>Thu, 13 Feb 2025 10:20:34 +0800</pubDate>
      <guid>https://heyuuuu77.github.io/posts/go/</guid>
      <description>&lt;h5 id=&#34;ÂºïÁî®Á±ªÂûã&#34;&gt;ÂºïÁî®Á±ªÂûã&lt;/h5&gt;
&lt;p&gt;ÈÄöÈÅì(channel)„ÄÅ Êò†Â∞Ñ(map)„ÄÅ ÂàáÁâá(slice)&lt;/p&gt;
&lt;h4 id=&#34;sync&#34;&gt;sync&lt;/h4&gt;
&lt;p&gt;sync ÂåÖÊèê‰æõÂêåÊ≠• goroutine ÁöÑÂäüËÉΩ„ÄÇ Âú®GoËØ≠Ë®Ä‰∏≠Ôºå mainÁªàÊ≠¢Âàô‰ª£Ë°®‰∫ÜÁ®ãÂ∫èÁªàÊ≠¢Ôºå mainÂáΩÊï∞ÁªàÊ≠¢ÂâçËøò‰ºöÂÖ≥Èó≠ÊâÄÊúâ‰πãÂâçÂêØÂä®‰∏îËøêË°åÁöÑ goroutine„ÄÇ
Âπ∂ÂèëÂÜôÁ®ãÂ∫èÊó∂ÔºåÊúÄ‰Ω≥ÂÅöÊ≥ïÊòØ Âú®mainÂáΩÊï∞ËøîÂõûÂâçÔºåÊ∏ÖÁêÜÂπ∂ÁªàÊ≠¢ÊâÄÊúâ‰πãÂâçÂêØÂä®ÁöÑ goroutine„ÄÇÁºñÂÜôÂêØÂä®ÂíåÁªàÊ≠¢ÈÉΩÊ∏ÖÊô∞ÁöÑÁ®ãÂ∫èÔºåÂáèÂ∞ëbugÔºåÈò≤Ê≠¢ËµÑÊ∫êÂºÇÂ∏∏„ÄÇ&lt;/p&gt;
&lt;p&gt;sync ÂåÖÁöÑ WaitGroup ‰ºöË∑üË∏™ÊâÄÊúâÂêØÂä®ÁöÑ goroutine„ÄÇ WaitGroup ÊòØ‰∏Ä‰∏™ËÆ°Êï∞‰ø°Âè∑ÈáèÔºåÁî®Êù•ÁªüËÆ°ÊØè‰∏™ goroutine ÊòØÂê¶ÂÆåÊàê‰∫ÜÂ∑•‰Ωú„ÄÇ
ÂÖ∑‰ΩìÂÅöÊ≥ïÊòØ: Â∞Ü WaitGroup ÁöÑÂèòÈáèÂÄºËÆæÁΩÆ‰∏∫Ë¶ÅÂêØÂä®ÁöÑ goroutine Êï∞Èáè„ÄÇ ÊØè‰∏™ goroutine ÂÆåÊàêÂ∑•‰ΩúÂêéÔºå ÈÄíÂáè WaitGroup ÂèòÈáèÁöÑËÆ°Êï∞ÂÄº„ÄÇ
ÂΩìËøô‰∏™ÂÄº‰∏∫0ÔºåÂ∞±Áü•ÈÅìÊâÄÊúâÁöÑ goroutine ÈÉΩÂÆåÊàê‰∫ÜÂ∑•‰Ωú„ÄÇ&lt;/p&gt;
&lt;h5 id=&#34;ÂëΩÂêçËßÑËåÉ&#34;&gt;ÂëΩÂêçËßÑËåÉ&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;ÂëΩÂêçÊé•Âè£Êó∂ÔºåÂ¶ÇÊûúÊé•Âè£ÂÜÖÂ∞±‰∏Ä‰∏™ÊñπÊ≥ïÔºåÈúÄË¶Å‰ª• er ÁªìÂ∞æ„ÄÇ Â¶Ç Matcher„ÄÇ Â¶ÇÊûúÊé•Âè£Á±ªÂûãÂÜÖÈÉ®Â£∞Êòé‰∫ÜÂ§ö‰∏™ÊñπÊ≥ïÔºåÂÖ∂ÂêçÂ≠óÈúÄË¶Å‰∏éÂÖ∂Ë°å‰∏∫ÂÖ≥ËÅî&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;ÊúÄ‰Ω≥ÂÆûË∑µ&#34;&gt;ÊúÄ‰Ω≥ÂÆûË∑µ&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Â¶ÇÊûúÂ£∞ÊòéÂáΩÊï∞ÁöÑÊó∂ÂÄôÂ∏¶ÊúâÊé•Êî∂ËÄÖÔºåÂàôÊÑèÂë≥ÁùÄÂ£∞Êòé‰∫Ü‰∏Ä‰∏™ÊñπÊ≥ï„ÄÇËøô‰∏™ÊñπÊ≥ï‰ºöÂíåÊåáÂÆöÁöÑÊé•Êî∂ËÄÖÁ±ªÂûãÁªëÂÆöÂú®‰∏ÄËµ∑„ÄÇ
ÂÄºÁ±ªÂûãÂíåÂºïÁî®Á±ªÂûã‰Ωú‰∏∫Êé•Êî∂ËÄÖÁöÑÊñπÊ≥ïÔºåÂú®Ë∞ÉÁî®Êó∂ÁºñËØëÂô®‰ºöËá™Âä®ÁºñÁ†Å/Ëß£Á†ÅÂØπÂ∫îÁöÑÁ±ªÂûãÔºåÁÑ∂Âêé‰º†ÈÄíÁªôÊñπÊ≥ï„ÄÇ‰æãÂ¶Ç&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// ÊñπÊ≥ïÂ£∞Êòé‰∏∫‰ΩøÁî® defaultMatcher Á±ªÂûãÁöÑÂÄº‰Ωú‰∏∫Êé•Êî∂ËÄÖ&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;defaultMatch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Search&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;feed&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Feed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;stringTerm&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Â£∞Êòé‰∏Ä‰∏™ÊåáÂêë defaultMatcherÁ±ªÂûãÂÄºÁöÑÊåáÈíà&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;dm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;defaultMatch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// ÁºñËØëÂô®‰ºöËß£ÂºÄdmÊåáÈíàÁöÑÂºïÁî®Ôºå‰ΩøÁî®ÂØπÂ∫îÁöÑÂÄºË∞ÉÁî®ÊñπÊ≥ï&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;dm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Search&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;feed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// ÊñπÊ≥ïÂ£∞Êòé‰∏∫‰ΩøÁî®ÊåáÂêëdefaultMatcherÁ±ªÂûãÂÄºÁöÑÊåáÈíà‰Ωú‰∏∫Êé•Êî∂ËÄÖ&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;defaultMatcher&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Search&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;feed&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Feed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;searchTerm&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Â£∞Êòé‰∏Ä‰∏™defaultMatcherÁ±ªÂûãÁöÑÂÄº&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dm&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;defaultMatch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// ÁºñËØëÂô®‰ºöËá™Âä®ÁîüÊàêÊåáÈíàÂºïÁî®dmÂÄºÔºå‰ΩøÁî®ÊåáÈíàË∞ÉÁî®ÊñπÊ≥ï&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;dm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Search&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;feed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;‚Äù&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;‰∏éÁõ¥Êé•ÈÄöËøáÂÄºÊàñËÄÖÊåáÈíàË∞ÉÁî®‰∏çÂêåÔºå Â¶ÇÊûúÈÄöËøáÊé•Âè£Á±ªÂûãÁöÑÂÄºË∞ÉÁî®ÊñπÊ≥ïÔºåËßÑÂàôÊúâÂæàÂ§ß‰∏çÂêå„ÄÇ
1. ‰ΩøÁî®ÊåáÈíà‰Ωú‰∏∫Êé•Êî∂ËÄÖÂ£∞ÊòéÁöÑÊñπÊ≥ïÔºåÂè™ËÉΩÂú®Êé•Âè£Á±ªÂûãÁöÑÂÄºÊòØ‰∏Ä‰∏™ÊåáÈíàÁöÑÊó∂ÂÄôË¢´Ë∞ÉÁî®„ÄÇ
2. ‰ΩøÁî®ÂÄº‰Ωú‰∏∫Êé•Êî∂ËÄÖÂ£∞ÊòéÁöÑÊñπÊ≥ïÔºåÂú®Êé•Âè£Á±ªÂûãÁöÑÂÄº‰∏∫ÂÄºÊàñËÄÖÊåáÈíàÊó∂ÔºåÈÉΩÂèØ‰ª•Ë¢´Ë∞ÉÁî®„ÄÇ&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kafka</title>
      <link>https://heyuuuu77.github.io/posts/kafka/</link>
      <pubDate>Wed, 12 Feb 2025 19:36:38 +0800</pubDate>
      <guid>https://heyuuuu77.github.io/posts/kafka/</guid>
      <description>&lt;h4 id=&#34;kafka&#34;&gt;Kafka&lt;/h4&gt;
&lt;p&gt;ÂàÜÂ∏ÉÂºèÁöÑÊ∂àÊÅØÂºïÊìéÁ≥ªÁªü&lt;/p&gt;
&lt;h4 id=&#34;ÂêçËØçËß£Èáä&#34;&gt;ÂêçËØçËß£Èáä&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Ê∂àÊÅØ(Record): KafkaÂ§ÑÁêÜÁöÑÂØπË±°„ÄÇ&lt;/li&gt;
&lt;li&gt;‰∏ªÈ¢ò(Topic): ÊâøËΩΩÊ∂àÊÅØÁöÑÂÆπÂô®ÔºåÂèØ‰ª•‰∏∫ÊØè‰∏™‰∏öÂä°„ÄÅÂ∫îÁî®ÁîöËá≥ÊØèÁ±ªÊï∞ÊçÆÈÉΩÂàõÂª∫‰∏ìÂ±û‰∏ªÈ¢ò„ÄÇ&lt;/li&gt;
&lt;li&gt;ÂàÜÂå∫(Partition): ‰∏Ä‰∏™ÊúâÂ∫è‰∏çÂèòÁöÑÊ∂àÊÅØÂ∫èÂàóÔºåÂ∞ÜÊØè‰∏™‰∏ªÈ¢òÂàíÂàÜÊàêÂ§ö‰∏™ÂàÜÂå∫ÔºåÊØè‰∏™ÂàÜÂå∫ÊòØ‰∏ÄÁªÑÊúâÂ∫èÁöÑÊ∂àÊÅØÊó•Âøó„ÄÇKafkaÂàÜÂå∫ÁºñÂè∑‰ªé0ÂºÄÂßã„ÄÇ&lt;/li&gt;
&lt;li&gt;Ê∂àÊÅØ‰ΩçÁßª(Offset): ÂàÜÂå∫‰∏≠ÊØèÊù°Ê∂àÊÅØÁöÑ‰ΩçÁΩÆ‰ø°ÊÅØÔºåÂçïË∞ÉÈÄíÂ¢û‰∏î‰∏çÂèòÁöÑÂÄº„ÄÇ&lt;/li&gt;
&lt;li&gt;ÂâØÊú¨(Replica): ÂèàÂàÜ‰∏∫È¢ÜÂØºËÄÖÂâØÊú¨(Leader Replica) ÂíåËøΩÈöèËÄÖÂâØÊú¨(Follower Replica)„ÄÇ ÂâçËÄÖÂØπÂ§ñÊèê‰æõÊúçÂä°ÔºåÊåá‰∏éÂÆ¢Êà∑Á´ØÁ®ãÂ∫è‰∫§‰∫í„ÄÇÂêéËÄÖË¢´Âä®ËøΩÈöèÔºå‰∏ç‰∏éÂ§ñÁïåËøõË°å‰∫§‰∫í„ÄÇ
ÂâØÊú¨ÁöÑÂ∑•‰ΩúÊú∫Âà∂: Áîü‰∫ßËÄÖÊÄªÊòØÂêëÈ¢ÜÂØºËÄÖÂâØÊú¨ÂÜôÊ∂àÊÅØÔºõËÄåÊ∂àË¥πËÄÖÊÄªÊòØ‰ªéÈ¢ÜÂØºËÄÖÂâØÊú¨ËØªÊ∂àÊÅØ„ÄÇ ËøΩÈöèËÄÖÂâØÊú¨ÂêëÈ¢ÜÂØºËÄÖÂâØÊú¨ÂèëÈÄÅËØ∑Ê±ÇÔºåËØ∑Ê±ÇÈ¢ÜÂØºËÄÖÊääÊúÄÊñ∞Áîü‰∫ßÁöÑÊ∂àÊÅØÂèëÁªôÂÆÉ„ÄÇËøôÊ†∑ÂÆÉÂ∞±ÂèØ‰ª•Ë∑üÈ¢ÜÂØºËÄÖÂêåÊ≠•„ÄÇ&lt;/li&gt;
&lt;li&gt;Áîü‰∫ßËÄÖ(Producer): Âêë‰∏ªÈ¢òÂèëÂ∏ÉÊ∂àÊÅØÁöÑÂÆ¢Êà∑Á´ØÂ∫îÁî®Á®ãÂ∫èÁß∞‰πã‰∏∫Áîü‰∫ßËÄÖ„ÄÇ&lt;/li&gt;
&lt;li&gt;Ê∂àË¥πËÄÖ(Consumer): ÂÆö‰∫é‰∏ªÈ¢òÊ∂àÊÅØÁöÑÂÆ¢Êà∑Á´ØÂ∫îÁî®Á®ãÂ∫è„ÄÇ&lt;/li&gt;
&lt;li&gt;Ê∂àË¥πËÄÖ‰ΩçÁßª(Consumer Offset): Ë°®ÂæÅÊ∂àË¥πËÄÖÊ∂àË¥πËøõÂ∫¶ÔºåÊØè‰∏™Ê∂àË¥πËÄÖÈÉΩÊúâËá™Â∑±ÁöÑÊ∂àË¥πËÄÖ‰ΩçÁßª„ÄÇ&lt;/li&gt;
&lt;li&gt;Ê∂àË¥πËÄÖÁªÑ(Consumer Group): Â§ö‰∏™Ê∂àË¥πËÄÖÂÆû‰æãÂÖ±ÂêåÁªÑÊàê‰∏Ä‰∏™ÁªÑÔºåÂêåÊó∂Ê∂àË¥πÂ§ö‰∏™ÂàÜÂå∫‰ª•ÂÆûÁé∞È´òÂêûÂêê„ÄÇ&lt;/li&gt;
&lt;li&gt;ÈáçÂπ≥Ë°°(Rebalance): Ê∂àË¥πËÄÖÁªÑÂÜÖÊüê‰∏™Ê∂àË¥πËÄÖÂÆû‰æãÊåÇÊéâÂêéÔºåÂÖ∂‰ªñÊ∂àË¥πËÄÖÂÆû‰æãËá™Âä®ÈáçÊñ∞ÂàÜÈÖçËÆ¢ÈòÖ‰∏ªÈ¢òÂàÜÂå∫ÁöÑËøáÁ®ã„ÄÇRebalance ÊòØ„ÄÇKafka Ê∂àË¥πËÄÖÁ´ØÂÆûÁé∞È´òÂèØÁî®ÁöÑÈáçË¶ÅÊâãÊÆµ„ÄÇ&lt;/li&gt;
&lt;li&gt;ÂÆ¢Êà∑Á´Ø(Clients): Áîü‰∫ßËÄÖ/Ê∂àË¥πËÄÖÁªüÁß∞‰∏∫ÂÆ¢Êà∑Á´Ø&lt;/li&gt;
&lt;li&gt;Broker: KafkaÁöÑÊúçÂä°Âô®Á´ØÁî±BrokerÁöÑÊúçÂä°ËøõÁ®ãÊûÑÊàêÔºåÂç≥‰∏Ä‰∏™KafkaÈõÜÁæ§Áî±Â§ö‰∏™BrokerÁªÑÊàêÔºåBrokerË¥üË¥£Êé•Êî∂ÂíåÂ§ÑÁêÜÂÆ¢Êà∑Á´ØÂèëÈÄÅËøáÊù•ÁöÑËØ∑Ê±ÇÔºå‰ª•ÂèäÂØπÊ∂àÊÅØÊåÅ‰πÖÂåñ&lt;/li&gt;
&lt;li&gt;Â§á‰ªΩÊú∫Âà∂(Replication): Â∞ÜÁõ∏ÂêåÊï∞ÊçÆÊã∑Ë¥ùÂà∞Â§öÂè∞Êú∫Âô®‰∏äÔºåËøô‰∫õÁõ∏ÂêåÊï∞ÊçÆÊã∑Ë¥ùÂú®Kafka‰∏≠Ë¢´Áß∞‰∏∫ÂâØÊú¨(Replica)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ÊØè‰∏™ÂàÜÂå∫ÈÉΩÂèØ‰ª•ÈÖçÁΩÆËã•Âπ≤‰∏™ÂâØÊú¨ÔºåÂÖ∂‰∏≠Âè™ËÉΩÊúâ1‰∏™È¢ÜÂØºËÄÖÂâØÊú¨Âíå N-1‰∏™ËøΩÈöèËÄÖÂâØÊú¨„ÄÇ&lt;/p&gt;
&lt;h4 id=&#34;‰∏âÂ±ÇÊ∂àÊÅØÊû∂ÊûÑ&#34;&gt;‰∏âÂ±ÇÊ∂àÊÅØÊû∂ÊûÑ&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;‰∏ªÈ¢òÂ±Ç: ÊØè‰∏™‰∏ªÈ¢òÈÖçÁΩÆ M ‰∏™ÂàÜÂå∫ÔºåÊØè‰∏™ÂàÜÂå∫ÂèàÂèØ‰ª•ÈÖçÁΩÆ N ‰∏™ÂâØÊú¨„ÄÇ&lt;/li&gt;
&lt;li&gt;ÂàÜÂå∫Â±Ç: ÊØè‰∏™ÂàÜÂå∫ÁöÑ N ‰∏™ÂâØÊú¨Âè™Êúâ‰∏Ä‰∏™È¢ÜÂØºËÄÖÔºåÂØπÂ§ñÊèê‰æõÊúçÂä°Ôºå ÂÖ∂‰ªñ N-1 ‰∏™ÂâØÊú¨ÊòØËøΩÈöèËÄÖÂâØÊú¨Ôºå ÊåáÁ§∫Êèê‰æõÊï∞ÊçÆÂ§á‰ªΩ„ÄÇ&lt;/li&gt;
&lt;li&gt;Ê∂àÊÅØÂ±Ç: ÂàÜÂå∫‰∏≠ÂåÖÊã¨Ëã•Âπ≤Ê∂àÊÅØÔºåÊØèÊù°Ê∂àÊÅØÁöÑ‰ΩçÁßª‰ªé0ÂºÄÂßãÔºå‰æùÊ¨°ÈÄíÂ¢û„ÄÇ ÊúÄÁªàÂÆ¢Êà∑Á´ØÊòØËÉΩ‰∏éÂàÜÂå∫È¢ÜÂØºËÄÖÂâØÊú¨ËøõË°å‰∫§‰∫í„ÄÇ&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Hugo</title>
      <link>https://heyuuuu77.github.io/posts/hugo/</link>
      <pubDate>Sat, 08 Feb 2025 17:06:08 +0800</pubDate>
      <guid>https://heyuuuu77.github.io/posts/hugo/</guid>
      <description>&lt;p&gt;‰ΩøÁî®HugoÊê≠Âª∫ github pageË∂äÂà∞ÁöÑÂùë„ÄÇ È¶ñÂÖà hugo ÂëΩ‰ª§‰ºöÁîüÊàêÈùôÊÄÅÊñá‰ª∂„ÄÇ
Êú¨Âú∞Êü•ÁúãÁöÑÊó∂ÂÄôÊâßË°åÁöÑÂëΩ‰ª§ÊòØ &lt;code&gt;hugo server&lt;/code&gt;„ÄÇ Ëøô‰∏™Êó∂ÂÄôÔºåËçâÁ®øÊòØ‰∏ç‰ºöÊöÇÊó∂Âá∫Êù•ÁöÑ„ÄÇÂ¶ÇÊûúÈúÄË¶ÅÊöÇÊó∂ËçâÁ®øÔºå ÈúÄË¶ÅÂä†‰∏äÂèÇÊï∞ &lt;code&gt;-D&lt;/code&gt;„ÄÇ&lt;/p&gt;
&lt;p&gt;ÂàõÂª∫Êñ∞ÁöÑÊñáÁ´†ÁöÑÂëΩ‰ª§ÊòØ: &lt;code&gt;hugo new posts/your-post-name.md&lt;/code&gt;. Ê≥®ÊÑèËøô‰∏™Êó∂ÂÄôËá™Âä®ÁîüÊàêÁöÑ markdownÊñá‰ª∂‰∏≠ÁöÑ draft ÈªòËÆ§‰∏∫trueÔºåË°®Á§∫ÂΩìÂâçÊòØËçâÁ®øÊ®°Âºè„ÄÇ
Â¶ÇÊûúË¶ÅÂèØ‰ª•ËßÅÔºåÈúÄË¶ÅÂ∞ÜÂÖ∂ËÆæÁΩÆÊàêfalse„ÄÇ&lt;/p&gt;
&lt;p&gt;Êé•‰∏ãÊù•Â¶ÇÊûúÊú¨Âú∞Áúã‰∫ÜÊ≤°ÈóÆÈ¢òÔºåÈáçÁÇπÊòØÈúÄË¶ÅÂÖ≥Èó≠Êú¨Âú∞ÊúçÂä°, Âç≥&lt;code&gt;hugo server&lt;/code&gt; ÊâìÂºÄÁöÑÊúçÂä°ÔºåÂπ∂ÈáçÊñ∞ÊâßË°å&lt;code&gt;hugo&lt;/code&gt;„ÄÇ
‰∏çËøôÊ†∑ÂÅöÔºåhugo‰ºöÂ∞Üpublic‰∏ãÁöÑÈùôÊÄÅÊñá‰ª∂ÂÖ®ÈÉ®ÁºñËØëÊàêÊú¨Âú∞„ÄÇ ËøôÊó∂ÂÄôÊèê‰∫§Âà∞githubÔºåÈùôÊÄÅÊñá‰ª∂ÁöÑË∑≥ËΩ¨ÈìæÊé•‰ºö‰π±Êéâ„ÄÇÂÖ®ÈÉ®ÊåáÂêëÊú¨Âú∞ÈìæÊé•„ÄÇ&lt;/p&gt;
&lt;p&gt;Êèê‰∫§Ëá≥github pageÊó∂Ôºå‰∏çÁî®ÊäähugoÈ°πÁõÆÂÖ®ÈÉ®Êèê‰∫§‰∏äÂéªÔºåËÄåÊòØËøõÂÖ•Âà∞hugoÈ°πÁõÆÁöÑpublic Ë∑ØÂæÑ‰∏ãÔºåÊâßË°ågit initÔºå ÁÑ∂ÂêéÊ∑ªÂä† remote„ÄÇ Âú®Êèê‰∫§Â∞±OK‰∫Ü&lt;/p&gt;</description>
    </item>
    <item>
      <title>Interview</title>
      <link>https://heyuuuu77.github.io/posts/interview/</link>
      <pubDate>Sat, 08 Feb 2025 16:55:54 +0800</pubDate>
      <guid>https://heyuuuu77.github.io/posts/interview/</guid>
      <description>&lt;!-- ### ËÆ∞ÂΩï‰∏Ä‰∏ãÈù¢ËØï --&gt;
&lt;!-- ##### Èù¢ËØïËéâËéâ‰∏ù -- Â§±Ë¥• --&gt;
&lt;p&gt;&lt;code&gt;Â§±Ë¥•ÁêÜÁî±:&lt;/code&gt; ÂêÑÊñπÈù¢Ëøò‰∏çÈîôÔºå‰ΩÜÊòØÊúâÊõ¥ÂêàÈÄÇÁöÑ‰∫∫ÈÄâ„ÄÇ&lt;/p&gt;
&lt;p&gt;Áü•ÈÅìËøôÂè™ÊòØÈÇ£ËæπÁöÑÊØîËæÉÂßîÂ©âÁöÑË°®Ëææ„ÄÇ ‰∏ÄÈù¢ÊÄª‰ΩìÊù•ËØ¥Ê≤°ËÅä‰ªÄ‰πàÊäÄÊúØÈóÆÈ¢ò„ÄÇËÅä‰∫Ü‰∏Ä‰∫õ‰∏öÂä°Áõ∏ÂÖ≥ÁöÑ„ÄÇ
ÊØîËæÉÊÑèÊÉ≥‰∏çÂà∞ÁöÑÊèêÈóÆÊòØÔºö Â¶ÇÊûúÊàëÊòØ‰∏öÂä°ÊñπÔºåÊàë‰ºöÊØîËæÉÁúãÈáçÂì™‰∫õÊåáÊ†á„ÄÇ Ëøô‰∏™ÈóÆÈ¢òÊàëÊòØÊØîËæÉÈîôÊÑïÁöÑÔºåÊàëÈù¢ËØïÁöÑÊòØÊäÄÊúØÂºÄÂèëÂ≤ó‰ΩçÔºå‰∏ÄËà¨Ë¥üË¥£ÁöÑÊòØÂÖ∑‰ΩìÁöÑÂäüËÉΩËêΩÂú∞Á≠âÁõ∏ÂÖ≥ÊäÄÊúØÊõ¥Â§ö„ÄÇ
ÂÄí‰πü‰∏çÊòØÂÆåÂÖ®‰∏çÂÖ≥ÂøÉ‰∏öÂä°ÔºåÂè™ÊòØÊúâ‰∫õÂ§™ÂÅèÂêë‰∏öÂä°ÁêÜËß£‰∫Ü„ÄÇÊõ¥Â§öÁöÑÊòØÂÉèÈù¢ËØïÊï∞ÊçÆÂàÜÊûêÂ∏à/Â∏ÇÂú∫ÊäïÊîæ‰∏öÂä°Áõ∏ÂÖ≥ÁöÑÂ≤ó‰Ωç„ÄÇ
‰∏™‰∫∫ÁêÜËß£ÊòØÁúãÈáçÂì™‰∫õÊåáÊ†áÊòØË¶ÅÁúãÂÖ∑‰ΩìÁöÑÁõÆÁöÑÔºåÊï¥‰ΩìÁúã‰∏ÄÊÆµÊó∂Èó¥ÂÜÖÁöÑÂπøÂëäÊÉÖÂÜµÂèØËÉΩ‰ºöÊØîËæÉÁúãÈáçROI„ÄÇÁúãÊüê‰∫õÁâπÂÆöÁöÑÂπøÂëäÊïàÊûúÔºåÂèØËÉΩ‰ºöÁúãCPIÔºåCPMËøô‰∫õÊåáÊ†á„ÄÇ&lt;/p&gt;
&lt;p&gt;‰∏ÄÈù¢ÊÄª‰ΩìÊØîËæÉÊó†Â•àÔºåÁî®ÁöÑÁºñÁ®ãËØ≠Ë®ÄÊòØPythonÔºåÈÉΩÊ≤°ÊúâÂà∞ÊØîËæÉÊ∑±ÂÖ•ÁöÑÊäÄÊúØÈóÆÈ¢ò„ÄÇÂ§ßÂ§öÊòØ‰∏Ä‰∫õÊØîËæÉÊÑèËØÜÊµÅÁöÑÁêÜËß£„ÄÇ ÂáÜÂ§áÁöÑÂæàÂ§öÁü•ËØÜ‰πüÊ≤°Áî®‰∏äÔºå‰∏çËøáËøô‰∫õÈÉΩÊòØÁßØÁ¥ØÔºåÁî®‰∏ç‰∏ä‰πüËøòÊòØÊàëËá™Â∑±ÁöÑÁü•ËØÜ„ÄÇÊÑüËßâÂ•ΩÂèØÊÉúÔºåÈùûÂ∏∏ÂñúÊ¨¢ËéâËéâ‰∏ùËøôÂÆ∂ÂÖ¨Âè∏„ÄÇ
ÂæàÈáçËßÜËøôÊ¨°Èù¢ËØïÔºå‰∏∫Ê≠§Ëøò‰∏ìÈó®ËØ∑‰∫ÜÂçäÂ§©ÂÅáÂú®ÂÆ∂Èù¢ËØï„ÄÇËøòÂú®ËØïÁî®ÊúüÔºåÊâ£‰∫ÜÂçäÂ§©ÁöÑÂ∑•ËµÑ„ÄÇÂîâÔºåÊûúÁÑ∂ÊúüÂæÖË∂äÈ´òÔºåÂ§±Ë¥•‰πãÂêéË∂äÈöæËøá„ÄÇÊúâÁÇπÂÇª&lt;/p&gt;
&lt;p&gt;Âîâ„ÄÇ ÂêéÈù¢Ê≥¢ÂÖãÂüéÂ∏ÇÊúâÁ±ª‰ººÁöÑÂ≤ó‰Ωç„ÄÇÁÆÄÂéÜÈÄÅÂà∞Áî®‰∫∫ÈÉ®Èó®ËøáleaderÁ≠õÈÄâ‰∫Ü„ÄÇÂ∏åÊúõËÉΩÊúâÂèçÈ¶à„ÄÇ&lt;/p&gt;
&lt;p&gt;ÂøÉÊÉÖÔºöÈùûÂ∏∏ÊúâÊå´Ë¥•ÊÑü üíî
&amp;mdash;- ËÆ∞ÂΩï‰∫é 2025-02-08 16:55.&lt;/p&gt;
&lt;h1 id=&#34;2025-06-11-Èù¢ËØïÁü•ËØÜÁÇπÊ±áÊÄª&#34;&gt;2025-06-11 Èù¢ËØïÁü•ËØÜÁÇπÊ±áÊÄª&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>DjangoÁöÑÂ∏∏ËßÅÈóÆÈ¢ò</title>
      <link>https://heyuuuu77.github.io/posts/django/</link>
      <pubDate>Wed, 05 Feb 2025 11:09:45 +0800</pubDate>
      <guid>https://heyuuuu77.github.io/posts/django/</guid>
      <description>&lt;h4 id=&#34;‰ªÄ‰πàÊòØorm&#34;&gt;‰ªÄ‰πàÊòØORM&lt;/h4&gt;
&lt;p&gt;ORM Âç≥ÂØπË±°ÂÖ≥Á≥ªÊò†Â∞ÑÔºåÂÆÉÂ∞ÜÊï∞ÊçÆÂ∫ì‰∏≠ÁöÑË°®Êò†Â∞Ñ‰∏∫ Python Á±ªÔºåÂ∞ÜË°®‰∏≠ÁöÑËÆ∞ÂΩïÊò†Â∞Ñ‰∏∫Á±ªÁöÑÂÆû‰æãÔºåÈÄöËøáÊìç‰ΩúÁ±ªÂíåÂÆû‰æãÊù•Êìç‰ΩúÊï∞ÊçÆÂ∫ì„ÄÇ‰ºòÁÇπÂåÖÊã¨ÊèêÈ´òÂºÄÂèëÊïàÁéá„ÄÅÂèØÁßªÊ§çÊÄßÂº∫„ÄÅÂÆâÂÖ®ÊÄßÈ´òÔºàËá™Âä®Â§ÑÁêÜ SQL Ê≥®ÂÖ•ÔºâÁ≠â„ÄÇ&lt;/p&gt;
&lt;h4 id=&#34;‰ªÄ‰πàÊòØ-n1ÈóÆÈ¢ò&#34;&gt;‰ªÄ‰πàÊòØ N+1ÈóÆÈ¢ò&lt;/h4&gt;
&lt;p&gt;Django ÁöÑ ORMÔºàÂØπË±°ÂÖ≥Á≥ªÊò†Â∞ÑÔºâ‰∏∫ÂºÄÂèëËÄÖÊèê‰æõ‰∫Ü‰æøÊç∑ÁöÑÊï∞ÊçÆÂ∫ìÊìç‰ΩúÊñπÂºèÔºåÂÖÅËÆ∏ÈÄöËøá Python ÂØπË±°Êù•Êìç‰ΩúÊï∞ÊçÆÂ∫ì„ÄÇÁÑ∂ËÄåÔºåÂΩìËøõË°åÂÖ≥ËÅîÊü•ËØ¢Êó∂ÔºåÂ¶ÇÊûúÂ§ÑÁêÜ‰∏çÂΩìÔºåÂ∞±ÂÆπÊòìÂºïÂèë N + 1 Êü•ËØ¢ÈóÆÈ¢ò„ÄÇÂÖ∂Ê†∏ÂøÉÂéüÂõ†Âú®‰∫éÔºåÂú®ËøõË°åÂ§öÊ¨°Êü•ËØ¢Êó∂ÔºåÊ≤°Êúâ‰∏ÄÊ¨°ÊÄßËé∑ÂèñÊâÄÊúâÂÖ≥ËÅîÊï∞ÊçÆÔºåËÄåÊòØÂÖàÊâßË°å‰∏ÄÊ¨°Êü•ËØ¢Ëé∑Âèñ‰∏ªÂØπË±°ÂàóË°®ÔºåÁÑ∂ÂêéÈíàÂØπÊØè‰∏™‰∏ªÂØπË±°ÔºåÂÜçÂàÜÂà´ÊâßË°å‰∏ÄÊ¨°Êü•ËØ¢Êù•Ëé∑ÂèñÂÖ∂ÂÖ≥ËÅîÂØπË±°ÔºåËøôÂ∞±ÂØºËá¥Êü•ËØ¢Ê¨°Êï∞ËøáÂ§öÔºåÊÄßËÉΩ‰∏ãÈôç„ÄÇ&lt;/p&gt;
&lt;p&gt;ÁÆÄÂçïÊù•ËØ¥Â∞±ÊòØÂ§öË°®ÂÖ≥ËÅîÁöÑÊó∂ÂÄôÔºåÂ¶ÇÊûúÊ∂âÂèäÂà∞‰∏ÄÂØπÂ§öÁöÑÂÖ≥ËÅîÂÖ≥Á≥ªÔºå Êü•ËØ¢ÂÆåÊàê‚Äú‰∏Ä‚Äù‰πãÂêéÔºåÂú®ÈÅçÂéÜËøô‰∏™‚Äú‰∏Ä‚ÄùËé∑ÂèñÂÖ∂ÂÖ≥ËÅîÁöÑÂ§öÊù°Êï∞ÊçÆÊó∂Ôºå Â∞±Èù¢‰∏¥‰∫ÜNÁöÑÈóÆÈ¢ò„ÄÇ&lt;/p&gt;
&lt;p&gt;django‰∏≠Êèê‰æõ‰∫Ü select_related() Âíå prefetch_related()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;select_related()&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ÂâçËÄÖ‰∏ªË¶ÅÁî®Êù•Â§ÑÁêÜ ‰∏ÄÂØπ‰∏Ä/Â§ñÈîÆÂÖ≥ËÅîÂÖ≥ËÅî(ForeignKeyÂíåOneToOneField), ÂÆÉÈÄöËøásql‰∏≠ÁöÑjoin‰∏ÄÊ¨°ÊÄßÊü•ËØ¢ÊâÄÊúâÁõ∏ÂÖ≥Êï∞ÊçÆÔºå‰ª£Á†ÅÂ¶Ç‰∏ã&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Áî±‰∫éËøôÈáåÊòØÂèçÂêëÊü•ËØ¢Ôºåselect_related ‰∏çÈÄÇÁî®Ôºå‰∏ãÈù¢Âè™ÊòØÁ§∫‰æãÂÖ∂‰ΩøÁî®Âú∫ÊôØ&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Â¶ÇÊûúÊòØÊ≠£ÂêëÊü•ËØ¢ÔºåÊØîÂ¶Ç‰ªé Book Êü•ËØ¢ Author ÂèØ‰ª•Áî® select_related&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;books&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Book&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;select_related&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;author&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;book&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;books&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; ÁöÑ‰ΩúËÄÖÊòØ &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;book&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;author&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;prefetch_related()&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;prefetch_related() Áî®‰∫éÂ§ÑÁêÜÂ§öÂØπÂ§öÂíåÂèçÂêëÂÖ≥ËÅîÔºàÂ¶Ç‰∏äËø∞Á§∫‰æã‰∏≠‰ªé Author Êü•ËØ¢ BookÔºâÔºåÂÆÉÈÄöËøáÂ§öÊ¨°Êü•ËØ¢Âπ∂Âú® Python Â±ÇÈù¢ÂêàÂπ∂Êï∞ÊçÆ„ÄÇ‰øÆÊîπÊúÄÂàùÁöÑ‰ª£Á†ÅÂ¶Ç‰∏ã:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;authors&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Author&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;objects&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prefetch_related&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;books&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;author&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;authors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;book_count&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;author&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;books&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;author&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; Êúâ &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;book_count&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; Êú¨‰π¶„ÄÇ&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ËøôÈáåÔºåprefetch_related(&amp;lsquo;books&amp;rsquo;) ‰ºöÂÖàÊâßË°å‰∏ÄÊ¨°Êü•ËØ¢Ëé∑ÂèñÊâÄÊúâ‰ΩúËÄÖÔºåÂÜçÊâßË°å‰∏ÄÊ¨°Êü•ËØ¢Ëé∑ÂèñÊâÄÊúâÁõ∏ÂÖ≥ÁöÑ‰π¶Á±çÔºåÁÑ∂ÂêéÂú® Python Â±ÇÈù¢Â∞ÜÂÆÉ‰ª¨ÂÖ≥ËÅîËµ∑Êù•„ÄÇÊÄªÂÖ±Âè™ÊâßË°å‰∫Ü 2 Ê¨°Êü•ËØ¢ÔºåËÄå‰∏çÊòØ N + 1 Ê¨°Êü•ËØ¢ÔºåÊúâÊïàÊèêÈ´ò‰∫ÜÊÄßËÉΩ„ÄÇ&lt;/p&gt;</description>
    </item>
    <item>
      <title>ËÆæËÆ°Ê®°ÂºèËØ¶Ëß£</title>
      <link>https://heyuuuu77.github.io/posts/design_pattern/</link>
      <pubDate>Wed, 05 Feb 2025 10:00:19 +0800</pubDate>
      <guid>https://heyuuuu77.github.io/posts/design_pattern/</guid>
      <description>&lt;p&gt;ËÆæËÆ°Ê®°ÂºèÊòØËΩØ‰ª∂ÂºÄÂèë‰∏≠ÈíàÂØπÂêÑÁßçÂèçÂ§çÂá∫Áé∞ÁöÑÈóÆÈ¢òÂΩíÁ∫≥Âá∫ÁöÑÈÄöÁî®ÁöÑËß£ÂÜ≥ÊñπÊ°àÔºåÊÄªÂÖ±Êúâ23ÁßçËÆæËÆ°Ê®°ÂºèÔºåÂàÜÂà´ÂàÜÊàêÂàõÂª∫ÂûãÔºåÁªìÊûÑÊÄßÂíåË°å‰∏∫Âûã‰∏âÂ§ßÁ±ª&lt;/p&gt;
&lt;h4 id=&#34;ÂàõÂª∫Âûã&#34;&gt;ÂàõÂª∫Âûã&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Âçï‰æãÊ®°Âºè
Á°Æ‰øù‰∏Ä‰∏™Á±ªÂè™Êúâ‰∏Ä‰∏™ÂÆû‰æãÔºåÂπ∂Êèê‰æõ‰∏Ä‰∏™ÂÖ®Â±ÄËÆøÈóÆÁÇπÊù•ËÆøÈóÆËøô‰∏™ÂÆû‰æã„ÄÇ
Python‰∏≠ÁöÑÂÆûÁé∞ÊñπÂºèÊòØÈÄöËøá__new__È≠îÊúØÊñπÊ≥ïÂÆûÁé∞„ÄÇ&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Singleton&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;_instance&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__new__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kwargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_instance&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_instance&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;fm&#34;&gt;__new__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;kwargs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;cls&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_instance&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ‰ΩøÁî®Á§∫‰æã&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Singleton&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;s2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Singleton&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s1&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# ËæìÂá∫: True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Â∑•ÂéÇÊ®°Âºè&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Â∑•ÂéÇÊ®°ÂºèÂèØÁªÜÂàÜ‰∏∫ÁÆÄÂçïÂ∑•ÂéÇÊ®°Âºè„ÄÅÂ∑•ÂéÇÊñπÊ≥ïÊ®°ÂºèÂíåÊäΩË±°Â∑•ÂéÇÊ®°Âºè„ÄÇ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ÁÆÄÂçïÂ∑•ÂéÇÊ®°Âºè&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ÂÆö‰πâ‰∏Ä‰∏™Â∑•ÂéÇÁ±ªÔºåËØ•Á±ªÊúâ‰∏Ä‰∏™ÂàõÂª∫ÂØπË±°ÁöÑÊñπÊ≥ïÔºåÈÄöËøá‰º†ÂÖ•‰∏çÂêåÁöÑÂèÇÊï∞Êù•ÂàõÂª∫‰∏çÂêåÁ±ªÂûãÁöÑÂØπË±°„ÄÇ&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Animal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;speak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Dog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Animal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;speak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Woof!&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Cat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Animal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;speak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Meow!&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;AnimalFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nd&#34;&gt;@staticmethod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;create_animal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;animal_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;animal_type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;dog&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Dog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;animal_type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;cat&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Cat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ‰ΩøÁî®Á§∫‰æã&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;dog&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AnimalFactory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create_animal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;dog&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dog&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;speak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# ËæìÂá∫: Woof!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Â∑•ÂéÇÊ®°Âºè&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Â∞ÜÂØπË±°ÁöÑÂàõÂª∫Âª∂ËøüÂà∞Â≠êÁ±ª‰∏≠ËøõË°å„ÄÇÂÆö‰πâ‰∏Ä‰∏™ÂàõÂª∫ÂØπË±°ÁöÑÊäΩË±°ÊñπÊ≥ïÔºåÁî±ÂÖ∑‰ΩìÁöÑÂ≠êÁ±ªÊù•ÂÆûÁé∞ËØ•ÊñπÊ≥ïÔºå‰ªéËÄåÂàõÂª∫ÂÖ∑‰ΩìÁöÑÂØπË±°&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Animal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;speak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Dog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Animal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;speak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Woof!&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Cat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Animal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;speak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Meow!&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;AnimalFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;create_animal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;DogFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AnimalFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;create_animal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Dog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;CatFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AnimalFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;create_animal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Cat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ‰ΩøÁî®Á§∫‰æã&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;dog_factory&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DogFactory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;dog&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dog_factory&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;create_animal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dog&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;speak&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# ËæìÂá∫: Woof!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ÊäΩË±°Â∑•ÂéÇÊ®°Âºè&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Êèê‰æõ‰∏Ä‰∏™ÂàõÂª∫‰∏ÄÁ≥ªÂàóÁõ∏ÂÖ≥ÊàñÁõ∏‰∫í‰æùËµñÂØπË±°ÁöÑÊé•Âè£ÔºåËÄåÊó†ÈúÄÊåáÂÆöÂÆÉ‰ª¨ÂÖ∑‰ΩìÁöÑÁ±ª&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redis</title>
      <link>https://heyuuuu77.github.io/posts/redis/</link>
      <pubDate>Wed, 05 Feb 2025 09:39:00 +0800</pubDate>
      <guid>https://heyuuuu77.github.io/posts/redis/</guid>
      <description>&lt;h4 id=&#34;Êï∞ÊçÆÁ±ªÂûã&#34;&gt;Êï∞ÊçÆÁ±ªÂûã&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;String: Â≠óÁ¨¶‰∏≤&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hash: ÂìàÂ∏å, ÊòØ‰∏Ä‰∏™ÈîÆÂÄºÂØπÈõÜÂêàÔºåÁ±ª‰ºº‰∫é Python ‰∏≠ÁöÑÂ≠óÂÖ∏„ÄÇÈÄÇÂêàÂ≠òÂÇ®ÂØπË±°Ôºå‰∏Ä‰∏™ÂìàÂ∏åÂèØ‰ª•ÂåÖÂê´Â§ö‰∏™Â≠óÊÆµÂíåÂØπÂ∫îÁöÑÂÄºÔºåÊØè‰∏™ÂìàÂ∏åÊúÄÂ§öÂèØÂ≠òÂÇ®2^32 -1‰∏™ÈîÆÂÄºÂØπ„ÄÇ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Â∏∏ËßÅÂëΩ‰ª§:
&lt;ol&gt;
&lt;li&gt;ËÆæÁΩÆÂçï‰∏™Â≠óÊÆµÂÄºÔºöHSET key field valueÔºå‰æãÂ¶Ç HSET user:1 name &amp;ldquo;Bob&amp;rdquo;„ÄÇ&lt;/li&gt;
&lt;li&gt;Ëé∑ÂèñÂçï‰∏™Â≠óÊÆµÂÄºÔºöHGET key fieldÔºå‰æãÂ¶Ç HGET user:1 name ‰ºöËøîÂõû &amp;ldquo;Bob&amp;rdquo;„ÄÇ&lt;/li&gt;
&lt;li&gt;Ëé∑ÂèñÊâÄÊúâÂ≠óÊÆµÂíåÂÄºÔºöHGETALL key„ÄÇ&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;List: ÂàóË°®&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Â∏∏ËßÅÂëΩ‰ª§:
LPUSH RPUSH LPOP RPOP LINDEX LRANGE LTRIM Á≠â
ÊòØ‰∏Ä‰∏™ÊúâÂ∫èÔºåÂèØ‰ª•ÈáçÂ§çÁöÑÁ∫øÊÄßÊï∞ÊçÆÊé•Âè£ÔºåÂü∫‰∫éÂèåÂêëÈìæË°®ÔºåÊîØÊåÅÂø´ÈÄüÁöÑÊèíÂÖ•ÂíåÂà†Èô§Êìç‰Ωú„ÄÇ&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;LPUSH key value [value &amp;hellip;]ÔºöÂ∞Ü‰∏Ä‰∏™ÊàñÂ§ö‰∏™ÂÄºÊèíÂÖ•Âà∞ÂàóË°®ÁöÑÂ§¥ÈÉ®„ÄÇ&lt;/li&gt;
&lt;li&gt;RPUSH key value [value &amp;hellip;]ÔºöÂ∞Ü‰∏Ä‰∏™ÊàñÂ§ö‰∏™ÂÄºÊèíÂÖ•Âà∞ÂàóË°®ÁöÑÂ∞æÈÉ®„ÄÇ&lt;/li&gt;
&lt;li&gt;LPOP keyÔºöÁßªÈô§Âπ∂ËøîÂõûÂàóË°®ÁöÑÁ¨¨‰∏Ä‰∏™ÂÖÉÁ¥†„ÄÇ&lt;/li&gt;
&lt;li&gt;RPOP keyÔºöÁßªÈô§Âπ∂ËøîÂõûÂàóË°®ÁöÑÊúÄÂêé‰∏Ä‰∏™ÂÖÉÁ¥†„ÄÇ&lt;/li&gt;
&lt;li&gt;LINDEX key indexÔºöËøîÂõûÂàóË°®‰∏≠ÊåáÂÆöÁ¥¢ÂºïÁöÑÂÖÉÁ¥†„ÄÇ&lt;/li&gt;
&lt;li&gt;LRANGE key start stopÔºöËøîÂõûÂàóË°®‰∏≠ÊåáÂÆöËåÉÂõ¥ÂÜÖÁöÑÂÖÉÁ¥†„ÄÇ&lt;/li&gt;
&lt;li&gt;LTRIM key start stopÔºöÊà™ÂèñÂàóË°®ÔºåÂè™‰øùÁïôÊåáÂÆöËåÉÂõ¥ÂÜÖÁöÑÂÖÉÁ¥†„ÄÇ&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ê∂àÊÅØÈòüÂàó: FIFO (First In First Out)&lt;/p&gt;</description>
    </item>
    <item>
      <title>PythonÁöÑ‰∏Ä‰∫õÁü•ËØÜÁÇπ</title>
      <link>https://heyuuuu77.github.io/posts/python/</link>
      <pubDate>Wed, 15 Jan 2025 11:30:03 +0000</pubDate>
      <guid>https://heyuuuu77.github.io/posts/python/</guid>
      <description>&lt;h4 id=&#34;pythonÁöÑÊï∞ÊçÆÁ±ªÂûã&#34;&gt;PythonÁöÑÊï∞ÊçÆÁ±ªÂûã&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;int: Êï¥Âûã&lt;/li&gt;
&lt;li&gt;float: ÊµÆÁÇπÂûã&lt;/li&gt;
&lt;li&gt;bool: Â∏ÉÂ∞îÂÄº&lt;/li&gt;
&lt;li&gt;str: Â≠óÁ¨¶‰∏≤&lt;/li&gt;
&lt;li&gt;list: ÂàóË°®ÔºåÊòØ‰∏ÄÁßçÂèØÂèòÁöÑ„ÄÅÊúâÂ∫èÁöÑÂ∫èÂàóÔºåÂèØ‰ª•ÂåÖÂê´‰∏çÂêåÁ±ªÂûãÁöÑÂÖÉÁ¥†„ÄÇ‰ΩøÁî®ÊñπÊã¨Âè∑ [] Êù•ÂÆö‰πâ„ÄÇ&lt;/li&gt;
&lt;li&gt;tuple: ÂÖÉÁ•ñÔºåÊòØ‰∏ÄÁßç‰∏çÂèØÂèòÁöÑ„ÄÅÊúâÂ∫èÁöÑÂ∫èÂàóÔºå‰∏ÄÊó¶ÂàõÂª∫ÔºåÂÖ∂ÂÖÉÁ¥†‰∏çËÉΩË¢´‰øÆÊîπ„ÄÇ‰ΩøÁî®ÂúÜÊã¨Âè∑ () Êù•ÂÆö‰πâ„ÄÇ&lt;/li&gt;
&lt;li&gt;set: ÈõÜÂêàÔºåÊòØ‰∏ÄÁßçÊó†Â∫èÁöÑ„ÄÅÂîØ‰∏ÄÁöÑÊï∞ÊçÆÈõÜÂêàÔºå‰∏çÂÖÅËÆ∏ÊúâÈáçÂ§çÁöÑÂÖÉÁ¥†„ÄÇ‰ΩøÁî®Ëä±Êã¨Âè∑ {} Êàñ set() ÂáΩÊï∞Êù•ÂÆö‰πâ&lt;/li&gt;
&lt;li&gt;dict: Â≠óÂÖ∏ÔºåÊòØ‰∏ÄÁßçÊó†Â∫èÁöÑÈîÆÂÄºÂØπÈõÜÂêàÔºåÊØè‰∏™ÈîÆÂøÖÈ°ªÊòØÂîØ‰∏ÄÁöÑÔºå‰∏îÈîÆÂøÖÈ°ªÊòØÂèØÂìàÂ∏åÁöÑÊï∞ÊçÆÁ±ªÂûãÔºàÂ¶ÇÊï¥Êï∞„ÄÅÂ≠óÁ¨¶‰∏≤„ÄÅÂÖÉÁªÑÁ≠âÔºâ„ÄÇ‰ΩøÁî®Ëä±Êã¨Âè∑ {} Êù•ÂÆö‰πâÔºåÈîÆÂíåÂÄº‰πãÈó¥Áî®ÂÜíÂè∑ : ÂàÜÈöî&lt;/li&gt;
&lt;li&gt;NoneType: Âè™Êúâ‰∏Ä‰∏™ÂÄº NoneÔºåÈÄöÂ∏∏Áî®‰∫éË°®Á§∫ÂèòÈáèÊ≤°ÊúâÂÄºÊàñÂáΩÊï∞Ê≤°ÊúâËøîÂõûÂÄº„ÄÇ&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;listÂàóË°®-‰∏é-tupleÂÖÉÁ•ñ-ÁöÑÂå∫Âà´&#34;&gt;List(ÂàóË°®) ‰∏é Tuple(ÂÖÉÁ•ñ) ÁöÑÂå∫Âà´&lt;/h4&gt;
&lt;p&gt;List ÂèØÂèòÔºåÈÄöËøáÂèØ‰ª•ÈÄöËøáÁ¥¢Âºï‰øÆÊîπ„ÄÅÊ∑ªÂä†ÊàñÂà†Èô§Ôºå ‰ΩøÁî®[]ÂÆö‰πâ„ÄÇ Tuple‰∏çÂèØÂèòÔºå‰ΩøÁî®()ÂÆö‰πâ„ÄÇ&lt;/p&gt;
&lt;h4 id=&#34;ÂèØËø≠‰ª£ÂØπË±°&#34;&gt;ÂèØËø≠‰ª£ÂØπË±°&lt;/h4&gt;
&lt;p&gt;ÂåÖÂê´ &lt;strong&gt;iter&lt;/strong&gt; ÊñπÊ≥ïÔºåËÉΩÂ§üË¢´ÈÅçÂéÜÁöÑÈÉΩÂèØ‰ª•Áß∞‰πã‰∏∫ÂèØËø≠‰ª£ÂØπË±°„ÄÇ ‰æãÂ¶ÇpythonÁöÑÂÆπÂô®Á±ªÊï∞ÊçÆÁ±ªÂûãÔºöList, Tuple, Set, Dict„ÄÇ‰ΩøÁî® &lt;code&gt;iter()&lt;/code&gt; ÂáΩÊï∞ÂèØ‰ª•Â∞ÜÂèØËø≠‰ª£ÂØπË±°ËΩ¨Êç¢ÊàêËø≠‰ª£Âô®„ÄÇ&lt;/p&gt;
&lt;h4 id=&#34;Ëø≠‰ª£Âô®&#34;&gt;Ëø≠‰ª£Âô®&lt;/h4&gt;
&lt;p&gt;ÂåÖÂê´ &lt;strong&gt;next&lt;/strong&gt; È≠îÊ≥ïÊñπÊ≥ïÁöÑÂØπË±°„ÄÇ ÂØπ‰∫éÂèØËø≠‰ª£ÂØπË±°ÔºåÂèØ‰ª•ÈÄöËøá &lt;code&gt;next()&lt;/code&gt; ÊñπÊ≥ïË∞ÉÁî®ÔºåÊØèÊ¨°Ë∞ÉÁî®ÔºåÈÉΩ‰ºöËøîÂõûÂèØËø≠‰ª£ÂØπË±°ÁöÑ‰∏ã‰∏Ä‰∏™ÂÖÉÁ¥†„ÄÇÁõ¥Âà∞Ê≤°ÊúâÂÖÉÁ¥†ËøîÂõûÊó∂ÊäõÂá∫StopIterationÂºÇÂ∏∏„ÄÇ&lt;/p&gt;
&lt;h4 id=&#34;ÁîüÊàêÂô®&#34;&gt;ÁîüÊàêÂô®&lt;/h4&gt;
&lt;p&gt;ÂèØ‰ª•ÁúãÊàêÊòØ‰∏Ä‰∏™ÁâπÊÆäÁöÑËø≠‰ª£Âô®„ÄÇ‰ΩøÁî® yield ÊñπÊ≥ï‰ª£Êõø return„ÄÇ ÊØèÊ¨°Ë∞ÉÁî®ÔºåÈÉΩ‰ºöËÆ∞ÂΩïÂáΩÊï∞Áä∂ÊÄÅÂπ∂ËøîÂõûÂΩìÂâçÂÄº„ÄÇ‰∏ãÊ¨°Ë∞ÉÁî®Ôºå‰ºöÁªßÁª≠‰ªéÁ∫™ÂΩïÁöÑÂú∞ÊñπÁªßÁª≠ÊâßË°å„ÄÇ&lt;/p&gt;
&lt;h4 id=&#34;Ë£ÖÈ•∞Âô®&#34;&gt;Ë£ÖÈ•∞Âô®&lt;/h4&gt;
&lt;p&gt;ÂåÖÂê´wrapperÊñπÊ≥ï„ÄÇÊó®Âú®‰∏çÊîπÂèòÂáΩÊï∞ÂéüÊúâ‰ª£Á†ÅÁöÑÂâçÊèê‰∏ãÔºå‰øÆÊîπÂáΩÊï∞/ÁªôÂáΩÊï∞Ê∑ªÂä†ÂäüËÉΩ„ÄÇ ÂÆûÁé∞ÂéüÁêÜÊòØÂõ†‰∏∫ Â∞ÜÂéüÂáΩÊï∞ÂΩìÊàêÂèÇÊï∞‰º†ÂÖ•Ë£ÖÈ•∞Âô®ÂáΩÊï∞„ÄÇ Ê∂âÂèäÂà∞‰∏Ä‰∏™Ê¶ÇÂøµÔºö Python‰∏≠ÔºåÂáΩÊï∞ÊòØ‰∏ÄÁ≠âÂÖ¨Ê∞ë.&lt;/p&gt;
&lt;h4 id=&#34;‰∏ä‰∏ãÊñáÁÆ°ÁêÜÂô®&#34;&gt;‰∏ä‰∏ãÊñáÁÆ°ÁêÜÂô®&lt;/h4&gt;
&lt;p&gt;ÂèØ‰ª•ÁêÜËß£ÊàêÂåÖÂê´__enter__, __exit__È≠îÊ≥ïÊñπÊ≥ïÁöÑÂØπË±°„ÄÇ ÈÄöËøáwithË∞ÉÁî®ÔºåÂú®ËØªÂèñÊñá‰ª∂ÔºåÊï∞ÊçÆÂ∫ìËøûÊé•ÔºåÈîÅÁöÑËé∑ÂèñÂíåÈáäÊîæ‰∏≠ÁªèÂ∏∏‰ΩøÁî®„ÄÇ‰ΩúÁî®ÊòØÁ°Æ‰øùËµÑÊ∫êÁöÑÊ≠£Á°Æ‰ΩøÁî®ÂíåÈáäÊîæ„ÄÇ‰æãÂ¶ÇÔºö&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
